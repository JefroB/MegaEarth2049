[
null,
{"id":1,"autoRemovalTiming":0,"chanceByDamage":100,"iconIndex":1,"maxTurns":1,"message1":" has fallen!","message2":" is slain!","message3":"","message4":" revives!","minTurns":1,"motion":3,"name":"Knockout","note":"State #1 will be automatically added when\nHP reaches 0.","overlay":0,"priority":100,"releaseByDamage":false,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100,"traits":[{"code":23,"dataId":9,"value":0}]},
{"id":2,"autoRemovalTiming":2,"chanceByDamage":100,"description":"","iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Guard","note":"Reduces damage taken for one turn.","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":true,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":62,"dataId":1,"value":0}]},
{"id":3,"autoRemovalTiming":0,"chanceByDamage":100,"description":"","iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Immortal","note":"Prevents HP from dropping below 1.","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":14,"dataId":1,"value":0}]},
{"id":4,"autoRemovalTiming":0,"chanceByDamage":100,"iconIndex":2,"maxTurns":5,"message1":" is poisoned!","message2":" is poisoned!","message3":" is succumbing to poison!","message4":" is no longer poisoned!","minTurns":3,"motion":1,"overlay":1,"name":"Poison","note":"Takes damage over time.","priority":50,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":22,"dataId":7,"value":-0.1}]},
{"id":5,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":3,"maxTurns":5,"message1":" is blinded!","message2":" is blinded!","message3":"","message4":" is no longer blinded!","minTurns":3,"motion":1,"name":"Blind","note":"Reduces Accuracy (HIT).","overlay":2,"priority":60,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":22,"dataId":0,"value":-0.5}]},
{"id":6,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":4,"maxTurns":5,"message1":" is silenced!","message2":" is silenced!","message3":"","message4":" is no longer silenced!","minTurns":3,"motion":1,"name":"Silence","note":"Cannot use Magic Skills (Skill Type 1).","overlay":3,"priority":65,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":42,"dataId":1,"value":0}]},
{"id":7,"autoRemovalTiming":1,"chanceByDamage":50,"iconIndex":5,"maxTurns":4,"message1":" is enraged!","message2":" is enraged!","message3":"","message4":" is no longer enraged!","minTurns":2,"motion":1,"name":"Rage","note":"Attacks allies or enemies randomly. Cannot control actions.","overlay":4,"priority":70,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":true,"removeByRestriction":false,"removeByWalking":false,"restriction":1,"stepsToRemove":100,"traits":[]},
{"id":8,"autoRemovalTiming":1,"chanceByDamage":50,"iconIndex":6,"maxTurns":4,"message1":" is confused!","message2":" is confused!","message3":"","message4":" is no longer confused!","minTurns":2,"motion":1,"name":"Confusion","note":"Attacks allies or enemies randomly. Cannot control actions.","overlay":5,"priority":75,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":true,"removeByRestriction":false,"removeByWalking":false,"restriction":2,"stepsToRemove":100,"traits":[]},
{"id":9,"autoRemovalTiming":1,"chanceByDamage":50,"iconIndex":7,"maxTurns":4,"message1":" is fascinated!","message2":" is fascinated!","message3":"","message4":" is no longer fascinated!","minTurns":2,"motion":1,"name":"Fascination","note":"Cannot act. Removed by damage.","overlay":6,"priority":80,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":true,"removeByRestriction":false,"removeByWalking":false,"restriction":3,"stepsToRemove":100,"traits":[]},
{"id":10,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":8,"maxTurns":5,"message1":" falls asleep!","message2":" falls asleep!","message3":" is sleeping.","message4":" wakes up!","minTurns":3,"motion":2,"name":"Sleep","note":"Cannot act. Removed by damage. Vulnerable to attacks.","overlay":7,"priority":90,"releaseByDamage":true,"removeAtBattleEnd":true,"removeByDamage":true,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100,"traits":[{"code":22,"dataId":1,"value":-1}]},
{"id":11,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":21,"dataId":5,"value":0.9},{"code":21,"dataId":3,"value":0.9}],"iconIndex":1600,"maxTurns":5,"message1":" has diarrhea, cha cha cha!","message2":" has diarrhea!","message3":" has explosive diarrhea!","message4":" no longer has the shits.","minTurns":5,"motion":0,"name":"Diarrhea","note":"<State Animation: 133>\n<Reapply Add Turns>\nReduces DEF and MDF slightly.","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":12,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":1601,"maxTurns":3,"message1":" feels constipated!","message2":" is constipated!","message3":" is struggling to go...","message4":" is no longer constipated.","minTurns":1,"motion":0,"name":"Constipation","note":"May randomly prevent acting.","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":13,"autoRemovalTiming":1,"chanceByDamage":100,"traits":[{"code":21,"dataId":0,"value":0.5},{"code":21,"dataId":1,"value":0.5},{"code":21,"dataId":2,"value":0.5},{"code":21,"dataId":4,"value":0.5},{"code":21,"dataId":3,"value":0.75},{"code":21,"dataId":6,"value":0.75},{"code":14,"dataId":11,"value":1},{"code":22,"dataId":7,"value":-0.05}],"iconIndex":1602,"maxTurns":5,"message1":" has dysentary. Oh my god, there is shit everywhere!","message2":" has dysentary!","message3":" has dysentary!","message4":" has been cured of dysentary.","minTurns":5,"motion":0,"name":"Dysentary","note":"<State Animation: 134>\nSevere stat reduction and HP loss.","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":true,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":14,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Dia/Dys","note":"<placeholder state>\nvar diarrhea = 11;\n  if (a.isStateAffected(diarrhea)) {\n    var turnsLeft = a._stateTurns[diarrhea];\n    if(turnsLeft >= 11) {\n      13;\n    } else {\n      11\n    } \n  }\n  else {\n     11;\n  } \n</placeholder state>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":15,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":21,"dataId":3,"value":1.5}],"iconIndex":129,"maxTurns":5,"message1":" raises a barrier!","message2":"'s barrier is strong!","message3":"","message4":"'s barrier fades!","minTurns":3,"motion":0,"name":"Barrier","note":"<State Animation: 139>\nIncreases DEF significantly.","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":16,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":23,"dataId":0,"value":0.1}],"iconIndex":32,"maxTurns":5,"message1":" feels revitalized!","message2":" regenerates health!","message3":"","message4":"'s regeneration stops.","minTurns":3,"motion":0,"name":"Regen","note":"<State Animation: 137>\nRecovers HP over time.","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":17,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":90,"maxTurns":15,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"test state","note":"<Custom State 17 Turn>\nturn = 5;\n</Custom State 17 Turn>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":18,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":10,"message1":"","message2":"","message3":"","message4":"","minTurns":10,"motion":0,"name":"Hyped/Stoked","note":"<placeholder state>\nvar hype = 19;\n  if (a.isStateAffected(hype)) {\n    var turnsLeft = a._stateTurns[hype];\n    if(turnsLeft >= 11) {\n      20;\n    } else {\n      19\n    } \n  }\n  else {\n     19;\n  } \n</placeholder state>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":19,"autoRemovalTiming":1,"chanceByDamage":100,"traits":[{"code":21,"dataId":2,"value":1.2},{"code":21,"dataId":4,"value":1.2},{"code":22,"dataId":9,"value":0.02},{"code":22,"dataId":8,"value":0.02}],"iconIndex":13,"maxTurns":5,"message1":" feels hyped!","message2":" is hyped!","message3":"","message4":" calms down.","minTurns":5,"motion":0,"name":"Hyped","note":"<Reapply Add Turns>\n<Custom Replace Attack>\nvar rand = Math.floor(Math.random() * 100);\n  if (rand >= 95) {\n    id = 3;\n  } else if ((rand >= 80) && (rand < 95)) {\n    id = 4;\n  } else {\n    id = 0;\n  }\n</Custom Replace Attack>\nIncreases ATK and MAT slightly. Small HP/MP regen.","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":20,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":21,"dataId":2,"value":1.5},{"code":21,"dataId":4,"value":1.5},{"code":21,"dataId":6,"value":1.2},{"code":21,"dataId":0,"value":1.1},{"code":21,"dataId":1,"value":1.1},{"code":21,"dataId":5,"value":1.1},{"code":21,"dataId":7,"value":1.2},{"code":22,"dataId":9,"value":0.05},{"code":22,"dataId":8,"value":0.05},{"code":14,"dataId":19,"value":1},{"code":21,"dataId":3,"value":1.1}],"iconIndex":1603,"maxTurns":5,"message1":" is totally stoked!","message2":" is stoked!","message3":"","message4":" is bummed out.","minTurns":5,"motion":0,"name":"Stoked","note":"<Custom Replace Attack>\nvar rand = Math.floor(Math.random() * 100);\n  if (rand >= 90) {\n    id = 5;\n  } else if ((rand >= 70) && (rand < 90)) {\n    id = 12;\n  } else {\n    id = 0;\n  }\n</Custom Replace Attack>\nGreatly increases stats. Moderate HP/MP regen. May cause Bummed afterwards.","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":21,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":14,"dataId":19,"value":1},{"code":21,"dataId":2,"value":0.8},{"code":21,"dataId":4,"value":0.8}],"iconIndex":1604,"maxTurns":3,"message1":" is bummed out...","message2":" is bummed.","message3":"","message4":" feels better.","minTurns":3,"motion":0,"name":"Bummed","note":"Reduces ATK and MAT.","overlay":0,"priority":40,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":22,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":22,"dataId":7,"value":-0.02}],"iconIndex":48,"maxTurns":3,"message1":" is bleeding!","message2":" is bleeding!","message3":" is losing blood!","message4":"'s bleeding stops.","minTurns":1,"motion":0,"name":"Bleed","note":"Loses HP over time.","overlay":0,"priority":55,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":23,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":21,"dataId":5,"value":1.5}],"iconIndex":128,"maxTurns":5,"message1":" raises a magic barrier!","message2":"'s magic barrier holds!","message3":"","message4":"'s magic barrier fades.","minTurns":3,"motion":0,"name":"Magic Barrier","note":"Increases MDF significantly.","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":24,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":42,"dataId":1,"value":1},{"code":42,"dataId":2,"value":1},{"code":42,"dataId":3,"value":1},{"code":42,"dataId":4,"value":1},{"code":44,"dataId":1,"value":1},{"code":44,"dataId":2,"value":1}],"iconIndex":91,"maxTurns":3,"message1":" is quarantined!","message2":" is quarantined.","message3":"","message4":" is released from quarantine.","minTurns":2,"motion":0,"name":"Quarantine","note":"Removes Disease states (custom IDs). Cannot act.","overlay":0,"priority":85,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100},
{"id":25,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":22,"dataId":7,"value":-0.02},{"code":11,"dataId":3,"value":1.5},{"code":11,"dataId":1,"value":1.2},{"code":21,"dataId":6,"value":0.8}],"iconIndex":65,"maxTurns":4,"message1":" gets frostbite!","message2":" is suffering from frostbite!","message3":"","message4":"'s frostbite heals.","minTurns":2,"motion":0,"name":"Frostbite","note":"Takes HP damage over time. Increases Ice damage taken. Reduces Agility.","overlay":0,"priority":55,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":26,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":22,"dataId":7,"value":-0.02}],"iconIndex":14,"maxTurns":7,"message1":" contracts Rabies!","message2":" has Rabies!","message3":" foams at the mouth!","message4":" is cured of Rabies.","minTurns":3,"motion":0,"name":"Rabies","note":"Causes Confusion and small HP loss over time.","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":2,"stepsToRemove":100},
{"id":27,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":21,"dataId":1,"value":0.9}],"iconIndex":1605,"maxTurns":1,"message1":" contracts Herpes!","message2":" has Herpes!","message3":"","message4":"'s Herpes clears up.","minTurns":1,"motion":0,"name":"Herpes","note":"Minor persistent ailment, slightly reduces MDF. (Permanent until cured).","overlay":0,"priority":30,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":28,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":21,"dataId":0,"value":0.7},{"code":21,"dataId":1,"value":0.7},{"code":21,"dataId":3,"value":0.7},{"code":21,"dataId":5,"value":0.7}],"iconIndex":1606,"maxTurns":1,"message1":" contracts AIDS!","message2":" has AIDS!","message3":"","message4":"... (Cannot be cured?)","minTurns":1,"motion":0,"name":"Aids","note":"Severe persistent ailment, significantly reduces MaxHP, MaxMP, DEF, MDF. (Permanent until special cure).","overlay":0,"priority":70,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":29,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":21,"dataId":6,"value":0.9}],"iconIndex":1607,"maxTurns":1,"message1":" contracts Gonorrhea!","message2":" has Gonorrhea!","message3":"","message4":" is cured of Gonorrhea.","minTurns":1,"motion":0,"name":"Gonorrhea","note":"Minor persistent ailment, slightly reduces AGI. (Permanent until cured).","overlay":0,"priority":30,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":30,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":21,"dataId":7,"value":0.9}],"iconIndex":1608,"maxTurns":1,"message1":" contracts Syphilis!","message2":" has Syphilis!","message3":"","message4":" is cured of Syphilis.","minTurns":1,"motion":0,"name":"Syphilis","note":"Minor persistent ailment, slightly reduces LUK. (Permanent until cured).","overlay":0,"priority":30,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":31,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":21,"dataId":4,"value":0.9}],"iconIndex":1609,"maxTurns":1,"message1":" gets The Clap!","message2":" has The Clap!","message3":"","message4":" no longer has The Clap.","minTurns":1,"motion":0,"name":"The Clap","note":"Minor persistent ailment, slightly reduces MAT. (Permanent until cured).","overlay":0,"priority":30,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":32,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":22,"dataId":0,"value":-0.1}],"iconIndex":1610,"maxTurns":15,"message1":" contracts Hepatitis B!","message2":" has Hepatitis B!","message3":" feels weak from Hepatitis B.","message4":" recovers from Hepatitis B.","minTurns":5,"motion":0,"name":"Hepatitis B","note":"Reduces Accuracy (HIT). Lasts a long time.","overlay":0,"priority":40,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":33,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":11,"dataId":6,"value":1.5}],"iconIndex":54,"maxTurns":3,"message1":" gets stuck!","message2":" is stuck!","message3":"","message4":" gets unstuck.","minTurns":3,"motion":0,"name":"Stuck","note":"Cannot act. Increased Earth damage taken.","overlay":0,"priority":85,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100},
{"id":34,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":11,"dataId":5,"value":1.5},{"code":22,"dataId":7,"value":-0.02},{"code":11,"dataId":1,"value":1.2},{"code":21,"dataId":6,"value":0.9}],"iconIndex":11,"maxTurns":3,"message1":" gets soaked!","message2":" is soaked!","message3":"","message4":" dries off.","minTurns":1,"motion":0,"name":"Soaked","note":"Increases Water damage taken. Reduces Agility slightly. Minor HP loss.","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":35,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":11,"dataId":2,"value":1.5},{"code":22,"dataId":7,"value":-0.05},{"code":11,"dataId":1,"value":1.2}],"iconIndex":64,"maxTurns":4,"message1":" is burned!","message2":" is burning!","message3":"","message4":"'s burns are treated.","minTurns":2,"motion":0,"name":"Burn","note":"Takes HP damage over time. Increases Fire damage taken.","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":36,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":11,"dataId":4,"value":1.5},{"code":22,"dataId":7,"value":-0.02},{"code":11,"dataId":1,"value":1.2}],"iconIndex":66,"maxTurns":3,"message1":" gets shocked!","message2":" is shocked!","message3":"","message4":" recovers from the shock.","minTurns":1,"motion":0,"name":"Shock","note":"Increases Thunder damage taken. Minor HP loss. May cause Paralysis randomly.","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":37,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":21,"dataId":2,"value":0.9},{"code":21,"dataId":4,"value":0.9},{"code":21,"dataId":6,"value":0.9}],"iconIndex":1611,"maxTurns":4,"message1":" develops a fever!","message2":" has a fever!","message3":"","message4":"'s fever breaks.","minTurns":2,"motion":0,"name":"Fever","note":"Slightly reduces ATK, MAT, and AGI.","overlay":0,"priority":40,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":38,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":21,"dataId":3,"value":0.9},{"code":21,"dataId":5,"value":0.9},{"code":21,"dataId":7,"value":0.9}],"iconIndex":1612,"maxTurns":5,"message1":" feels sick!","message2":" is sick.","message3":"","message4":" recovers from sickness.","minTurns":3,"motion":0,"name":"Sickness","note":"Slightly reduces DEF, MDF, and LUK.","overlay":0,"priority":40,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":39,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":1613,"maxTurns":5,"message1":" becomes hysterical!","message2":" is hysterical!","message3":"","message4":" calms down.","minTurns":1,"motion":1,"name":"Hysterical","note":"Cannot act. Removed by damage. Similar to Fascination.","overlay":6,"priority":80,"removeAtBattleEnd":true,"removeByDamage":true,"removeByRestriction":false,"removeByWalking":false,"restriction":3,"stepsToRemove":100},
{"id":40,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":11,"dataId":7,"value":1.5},{"code":22,"dataId":7,"value":-0.02},{"code":11,"dataId":1,"value":1.2}],"iconIndex":69,"maxTurns":3,"message1":" gets blown about!","message2":" is windblown!","message3":"","message4":" gets steady again.","minTurns":1,"motion":0,"name":"Windblown","note":"Increases Wind damage taken. Minor HP loss. May reduce accuracy.","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":41,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":23,"dataId":0,"value":0.02},{"code":23,"dataId":1,"value":0.02},{"code":21,"dataId":7,"value":1.1}],"iconIndex":70,"maxTurns":5,"message1":" is blessed!","message2":" feels blessed!","message3":"","message4":"'s blessing fades.","minTurns":3,"motion":0,"name":"Blessing","note":"Slight HP/MP Regen. Minor LUK increase.","overlay":8,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":42,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":11,"dataId":1,"value":1.2},{"code":22,"dataId":7,"value":-0.02},{"code":11,"dataId":9,"value":1.5}],"iconIndex":71,"maxTurns":4,"message1":" is vexed!","message2":" is vexed!","message3":"","message4":" is no longer vexed.","minTurns":2,"motion":0,"name":"Vexed","note":"Increases Dark damage taken. Minor HP loss. May reduce MDF.","overlay":9,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":43,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":44,"dataId":1,"value":1},{"code":44,"dataId":2,"value":1},{"code":44,"dataId":3,"value":1},{"code":44,"dataId":4,"value":1}],"iconIndex":1628,"maxTurns":5,"message1":" is protected!","message2":" is protected.","message3":"","message4":"'s protection wears off.","minTurns":5,"motion":0,"name":"Protection","note":"Grants high resistance to STD states (custom IDs).","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":44,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":45,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":46,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":47,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":9,"maxTurns":4,"message1":" is paralyzed!","message2":" is paralyzed!","message3":" cannot move!","message4":" can move again!","minTurns":2,"motion":2,"name":"Paralysis","note":"Cannot act. High chance of missing physical attacks.","overlay":8,"priority":95,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100,"traits":[{"code":22,"dataId":0,"value":-0.8}]},
{"id":48,"autoRemovalTiming":0,"chanceByDamage":0,"iconIndex":10,"maxTurns":1,"message1":" is turned to stone!","message2":" is petrified!","message3":"","message4":" returns to normal!","minTurns":1,"motion":2,"name":"Petrify","note":"Cannot act. High DEF/MDF. Often immune/resistant to many damage types but weak to others (e.g., Hammer). (Permanent until cured)","overlay":9,"priority":100,"releaseByDamage":false,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100,"traits":[{"code":21,"dataId":3,"value":2},{"code":21,"dataId":5,"value":2},{"code":11,"dataId":6,"value":2}]},
{"id":49,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":15,"maxTurns":5,"message1":" is cursed!","message2":" is cursed!","message3":" suffers from the curse!","message4":"'s curse is lifted.","minTurns":3,"motion":1,"name":"Curse","note":"Reduces LUK and drains MP over time.","overlay":12,"priority":45,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":7,"value":0.7},{"code":22,"dataId":9,"value":-0.05}]},
{"id":50,"autoRemovalTiming":1,"chanceByDamage":0,"iconIndex":16,"maxTurns":3,"message1":" is doomed!","message2":" is doomed!","message3":"'s time is running out!","message4":" is saved from doom!","minTurns":3,"motion":1,"name":"Doom","note":"Causes Knockout after the turn counter reaches zero.","overlay":13,"priority":99,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":51,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":40,"maxTurns":5,"message1":"'s attack increases!","message2":"'s attack is increased!","message3":"","message4":"'s attack returns to normal.","minTurns":3,"motion":0,"name":"ATK Up","note":"Increases Attack (ATK).","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":1.25}]},
{"id":52,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":48,"maxTurns":5,"message1":"'s attack decreases!","message2":"'s attack is decreased!","message3":"","message4":"'s attack returns to normal.","minTurns":3,"motion":0,"name":"ATK Down","note":"Decreases Attack (ATK).","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":0.75}]},
{"id":53,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":42,"maxTurns":5,"message1":"'s defense increases!","message2":"'s defense is increased!","message3":"","message4":"'s defense returns to normal.","minTurns":3,"motion":0,"name":"DEF Up","note":"Increases Defense (DEF).","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":3,"value":1.5}]},
{"id":54,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":50,"maxTurns":5,"message1":"'s defense decreases!","message2":"'s defense is decreased!","message3":"","message4":"'s defense returns to normal.","minTurns":3,"motion":0,"name":"DEF Down","note":"Decreases Defense (DEF).","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":3,"value":0.5}]},
{"id":55,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":41,"maxTurns":5,"message1":"'s magic attack increases!","message2":"'s magic attack is increased!","message3":"","message4":"'s magic attack returns to normal.","minTurns":3,"motion":0,"name":"MAT Up","note":"Increases Magic Attack (MAT).","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":4,"value":1.25}]},
{"id":56,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":49,"maxTurns":5,"message1":"'s magic attack decreases!","message2":"'s magic attack is decreased!","message3":"","message4":"'s magic attack returns to normal.","minTurns":3,"motion":0,"name":"MAT Down","note":"Decreases Magic Attack (MAT).","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":4,"value":0.75}]},
{"id":57,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":43,"maxTurns":5,"message1":"'s magic defense increases!","message2":"'s magic defense is increased!","message3":"","message4":"'s magic defense returns to normal.","minTurns":3,"motion":0,"name":"MDF Up","note":"Increases Magic Defense (MDF).","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":5,"value":1.5}]},
{"id":58,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":51,"maxTurns":5,"message1":"'s magic defense decreases!","message2":"'s magic defense is decreased!","message3":"","message4":"'s magic defense returns to normal.","minTurns":3,"motion":0,"name":"MDF Down","note":"Decreases Magic Defense (MDF).","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":5,"value":0.5}]},
{"id":59,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":44,"maxTurns":5,"message1":"'s agility increases!","message2":" feels hastened!","message3":"","message4":"'s agility returns to normal.","minTurns":3,"motion":0,"name":"Haste","note":"Increases Agility (AGI).","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":6,"value":1.5}]},
{"id":60,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":52,"maxTurns":5,"message1":"'s agility decreases!","message2":" feels slowed!","message3":"","message4":"'s agility returns to normal.","minTurns":3,"motion":0,"name":"Slow","note":"Decreases Agility (AGI).","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":6,"value":0.5}]},
{"id":61,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":45,"maxTurns":5,"message1":" feels lucky!","message2":" feels lucky!","message3":"","message4":"'s luck runs out.","minTurns":3,"motion":0,"name":"LUK Up","note":"Increases Luck (LUK).","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":7,"value":1.5}]},
{"id":62,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":53,"maxTurns":5,"message1":" feels unlucky!","message2":" feels unlucky!","message3":"","message4":"'s luck returns to normal.","minTurns":3,"motion":0,"name":"LUK Down","note":"Decreases Luck (LUK).","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":7,"value":0.5}]},
{"id":63,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":35,"maxTurns":5,"message1":" feels magically energized!","message2":" regenerates magic!","message3":"","message4":"'s magic regeneration stops.","minTurns":3,"motion":0,"name":"MP Regen","note":"Recovers MP over time.","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":23,"dataId":1,"value":0.05}]},
{"id":64,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":36,"maxTurns":5,"message1":" feels motivated!","message2":" gains technique points!","message3":"","message4":"'s motivation fades.","minTurns":3,"motion":0,"name":"TP Regen","note":"Recovers TP over time.","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":23,"dataId":2,"value":0.05}]},
{"id":65,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":128,"maxTurns":3,"message1":" is surrounded by a reflective barrier!","message2":"'s barrier reflects magic!","message3":"","message4":"'s reflective barrier dissipates.","minTurns":1,"motion":0,"name":"Reflect","note":"Reflects magic skills back at the caster.","overlay":10,"priority":70,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":14,"dataId":5,"value":1}]},
{"id":66,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":5,"maxTurns":3,"message1":" taunts the enemy!","message2":" is drawing attacks!","message3":"","message4":" stops taunting.","minTurns":1,"motion":0,"name":"Taunt","note":"Increases Target Rate (TGR), making enemies more likely to target the user.","overlay":0,"priority":65,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":22,"dataId":5,"value":1.5}]},
{"id":67,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":11,"dataId":8,"value":1.5},{"code":22,"dataId":7,"value":-0.01}],"iconIndex":70,"maxTurns":4,"message1":" is branded with holy light!","message2":" is branded!","message3":"","message4":"'s holy brand fades.","minTurns":2,"motion":0,"name":"Holy Brand","note":"Increases Holy damage taken. Minor HP loss.","overlay":8,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":68,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":22,"dataId":9,"value":-0.05}],"iconIndex":51,"maxTurns":4,"message1":"'s magic energy is draining!","message2":" loses MP!","message3":"","message4":"'s MP drain stops.","minTurns":2,"motion":1,"name":"MP Drain","note":"Loses MP over time.","overlay":0,"priority":45,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":69,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":54,"maxTurns":3,"message1":" is stopped!","message2":" is stopped!","message3":" Time is stopped!","message4":" can move again!","minTurns":2,"motion":2,"name":"Stop","note":"Cannot act. Time is frozen for the target.","overlay":11,"priority":100,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100,"traits":[]},
{"id":70,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":71,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1614,"maxTurns":5,"message1":" suddenly falls asleep!","message2":" is narcoleptic!","message3":" is sleeping at random intervals!","message4":" is no longer narcoleptic!","minTurns":3,"motion":2,"name":"Narcolepsy","note":"<State Animation: 135>\n<Category: Disease>\n<Category: Mental>\n<Custom Action Start Effect>\nif (Math.random() < 0.3) {\n  this.addState(10); // Add sleep state temporarily\n}\n</Custom Action Start Effect>","overlay":7,"priority":75,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100,"traits":[{"code":22,"dataId":0,"value":-0.3}]},
{"id":72,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1615,"maxTurns":7,"message1":" develops Tourette's!","message2":" has Tourette's!","message3":" is shouting random insults!","message4":" has overcome Tourette's!","minTurns":4,"motion":1,"name":"Tourette's","note":"<State Animation: 136>\n<Category: Disease>\n<Category: Mental>\n<Custom Action Start Effect>\nif (Math.random() < 0.4) {\n  // 40% chance to trigger effect\n  var targets = this.opponentsUnit().aliveMembers();\n  if (targets.length > 0) {\n    var target = targets[Math.floor(Math.random() * targets.length)];\n    if (Math.random() < 0.5) {\n      // 50% chance to damage\n      var damage = Math.floor(this.atk * 0.2);\n      target.gainHp(-damage);\n      BattleManager._logWindow.push('addText', this.name() + ' insults ' + target.name() + ' for ' + damage + ' damage!');\n    } else {\n      // 50% chance to enrage\n      target.addState(7); // Add rage state\n      BattleManager._logWindow.push('addText', this.name() + ' enrages ' + target.name() + ' with insults!');\n    }\n  }\n}\n</Custom Action Start Effect>","overlay":0,"priority":65,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":1.2}]},
{"id":73,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1616,"maxTurns":10,"message1":" becomes hypochondriac!","message2":" is hypochondriac!","message3":" is worried about imaginary diseases!","message4":" is no longer hypochondriac!","minTurns":5,"motion":1,"name":"Hypochondria","note":"<State Animation: 137>\n<Category: Disease>\n<Category: Mental>\n<Custom Regenerate Effect>\nif (Math.random() < 0.2) {\n  BattleManager._logWindow.push('addText', this.name() + ' complains about a disease they don't have!');\n}\n</Custom Regenerate Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":14,"dataId":11,"value":0.5},{"code":22,"dataId":7,"value":-0.02}]},
{"id":74,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1617,"maxTurns":6,"message1":" develops Stockholm Syndrome!","message2":" has Stockholm Syndrome!","message3":" is sympathizing with the enemy!","message4":" no longer has Stockholm Syndrome!","minTurns":3,"motion":1,"name":"Stockholm Syndrome","note":"<State Animation: 138>\n<Category: Disease>\n<Category: Mental>\n<Custom Confirm Effect>\nif (Math.random() < 0.3 && action.isAttack()) {\n  // 30% chance to heal instead of attack\n  value = -value * 0.5; // Convert damage to healing at 50% rate\n  BattleManager._logWindow.push('addText', this.name() + ' sympathizes with the enemy and heals them instead!');\n}\nreturn value;\n</Custom Confirm Effect>","overlay":0,"priority":70,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":75,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1618,"maxTurns":8,"message1":" develops Munchausen Syndrome!","message2":" has Munchausen Syndrome!","message3":" is faking symptoms!","message4":" no longer has Munchausen Syndrome!","minTurns":4,"motion":1,"name":"Munchausen","note":"<State Animation: 139>\n<Category: Disease>\n<Category: Mental>\n<Custom Turn Start Effect>\nvar fakeStates = [4, 5, 6, 7, 8]; // Poison, Blind, Silence, Rage, Confusion\nvar randomState = fakeStates[Math.floor(Math.random() * fakeStates.length)];\nBattleManager._logWindow.push('addText', this.name() + ' appears to have ' + $dataStates[randomState].name + ' but is faking it!');\n</Custom Turn Start Effect>","overlay":0,"priority":55,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":7,"value":1.2}]},
{"id":76,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1619,"maxTurns":7,"message1":" feels a phantom limb!","message2":" has phantom limb syndrome!","message3":" is attacking with limbs that aren't there!","message4":" no longer feels phantom limbs!","minTurns":3,"motion":1,"name":"Phantom Limb","note":"<State Animation: 140>\n<Category: Disease>\n<Category: Physical>\n<Custom Confirm Effect>\nif (action.isAttack()) {\n  if (Math.random() < 0.5) {\n    // 50% chance to double damage\n    value *= 2;\n    BattleManager._logWindow.push('addText', this.name() + ' attacks with a phantom limb for double damage!');\n  } else {\n    // 50% chance to miss\n    value = 0;\n    BattleManager._logWindow.push('addText', this.name() + ' swings with a phantom limb and misses!');\n  }\n}\nreturn value;\n</Custom Confirm Effect>","overlay":0,"priority":60,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":77,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1620,"maxTurns":10,"message1":" begins aging rapidly!","message2":" has Progeria!","message3":" is aging before your eyes!","message4":" is no longer aging rapidly!","minTurns":5,"motion":1,"name":"Progeria","note":"<State Animation: 141>\n<Category: Disease>\n<Category: Physical>\n<Custom Turn End Effect>\nif (this._stateTurns[71] && this._stateTurns[71] > 0) {\n  // Increase MAT buff as condition progresses\n  var currentTurn = this._stateTurns[71];\n  var maxTurn = 10;\n  var ratio = (maxTurn - currentTurn) / maxTurn;\n  this.addBuff(4, 1); // Add MAT buff\n}\n</Custom Turn End Effect>","overlay":0,"priority":65,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":0.8},{"code":21,"dataId":4,"value":1.3},{"code":21,"dataId":6,"value":0.7}]},
{"id":78,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1621,"maxTurns":6,"message1":" develops Synesthesia!","message2":" has Synesthesia!","message3":" is seeing sounds and hearing colors!","message4":" no longer has Synesthesia!","minTurns":3,"motion":1,"name":"Synesthesia","note":"<State Animation: 142>\n<Category: Disease>\n<Category: Mental>\n<Custom Action Start Effect>\nif (Math.random() < 0.2) {\n  // 20% chance to get confused\n  this.addState(8); // Add confusion state\n  BattleManager._logWindow.push('addText', this.name() + ' is overwhelmed by sensory crossing!');\n} else if (Math.random() < 0.3) {\n  // 30% chance to gain insight\n  this.addBuff(4, 2); // Add MAT buff\n  BattleManager._logWindow.push('addText', this.name() + ' gains insight from their unique perception!');\n}\n</Custom Action Start Effect>","overlay":0,"priority":55,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":4,"value":1.2},{"code":21,"dataId":5,"value":1.2}]},
{"id":79,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1622,"maxTurns":5,"message1":" develops Affluenza!","message2":" has Affluenza!","message3":" is too privileged to fight properly!","message4":" is no longer afflicted with Affluenza!","minTurns":3,"motion":1,"name":"Affluenza","note":"<State Animation: 143>\n<Category: Disease>\n<Category: Mental>\n<Custom Action Start Effect>\nif (Math.random() < 0.3) {\n  // 30% chance to bribe enemy\n  var gold = 50 + Math.floor(Math.random() * 50);\n  $gameParty.loseGold(gold);\n  var targets = this.opponentsUnit().aliveMembers();\n  if (targets.length > 0) {\n    var target = targets[Math.floor(Math.random() * targets.length)];\n    target.addState(9); // Add fascination state\n    BattleManager._logWindow.push('addText', this.name() + ' bribes ' + target.name() + ' with ' + gold + ' gold!');\n  }\n}\n</Custom Action Start Effect>","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":0.7},{"code":21,"dataId":3,"value":0.7}]},
{"id":80,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1623,"maxTurns":7,"message1":" develops Impostor Syndrome!","message2":" has Impostor Syndrome!","message3":" doubts their abilities!","message4":" overcomes their Impostor Syndrome!","minTurns":4,"motion":1,"name":"Impostor Syndrome","note":"<State Animation: 144>\n<Category: Disease>\n<Category: Mental>\n<Custom Confirm Effect>\nif (action.isAttack() || action.isMagicSkill()) {\n  if (Math.random() < 0.7) {\n    // 70% chance to reduce damage\n    value *= 0.7;\n    BattleManager._logWindow.push('addText', this.name() + ' hesitates due to self-doubt!');\n  } else {\n    // 30% chance to overcompensate and increase damage\n    value *= 1.5;\n    BattleManager._logWindow.push('addText', this.name() + ' overcompensates and hits harder!');\n  }\n}\nreturn value;\n</Custom Confirm Effect>","overlay":0,"priority":55,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":0.8},{"code":21,"dataId":4,"value":0.8}]},
{"id":81,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1614,"maxTurns":5,"message1":" suddenly falls asleep!","message2":" is narcoleptic!","message3":" is sleeping at random intervals!","message4":" is no longer narcoleptic!","minTurns":3,"motion":2,"name":"Narcolepsy","note":"<State Animation: 135>\n<Category: Disease>\n<Category: Mental>\n<Custom Action Start Effect>\nif (Math.random() < 0.3) {\n  this.addState(10); // Add sleep state temporarily\n}\n</Custom Action Start Effect>","overlay":7,"priority":75,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100,"traits":[{"code":22,"dataId":0,"value":-0.3}]},
{"id":82,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1615,"maxTurns":7,"message1":" develops Tourette's!","message2":" has Tourette's!","message3":" is shouting random insults!","message4":" has overcome Tourette's!","minTurns":4,"motion":1,"name":"Tourette's","note":"<State Animation: 136>\n<Category: Disease>\n<Category: Mental>\n<Custom Action Start Effect>\nif (Math.random() < 0.4) {\n  // 40% chance to trigger effect\n  var targets = this.opponentsUnit().aliveMembers();\n  if (targets.length > 0) {\n    var target = targets[Math.floor(Math.random() * targets.length)];\n    if (Math.random() < 0.5) {\n      // 50% chance to damage\n      var damage = Math.floor(this.atk * 0.2);\n      target.gainHp(-damage);\n      BattleManager._logWindow.push('addText', this.name() + ' insults ' + target.name() + ' for ' + damage + ' damage!');\n    } else {\n      // 50% chance to enrage\n      target.addState(7); // Add rage state\n      BattleManager._logWindow.push('addText', this.name() + ' enrages ' + target.name() + ' with insults!');\n    }\n  }\n}\n</Custom Action Start Effect>","overlay":0,"priority":65,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":1.2}]},
{"id":83,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1616,"maxTurns":10,"message1":" becomes hypochondriac!","message2":" is hypochondriac!","message3":" is worried about imaginary diseases!","message4":" is no longer hypochondriac!","minTurns":5,"motion":1,"name":"Hypochondria","note":"<State Animation: 137>\n<Category: Disease>\n<Category: Mental>\n<Custom Regenerate Effect>\nif (Math.random() < 0.2) {\n  BattleManager._logWindow.push('addText', this.name() + ' complains about a disease they don't have!');\n}\n</Custom Regenerate Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":14,"dataId":11,"value":0.5},{"code":22,"dataId":7,"value":-0.02}]},
{"id":84,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1617,"maxTurns":6,"message1":" develops Stockholm Syndrome!","message2":" has Stockholm Syndrome!","message3":" is sympathizing with the enemy!","message4":" no longer has Stockholm Syndrome!","minTurns":3,"motion":1,"name":"Stockholm Syndrome","note":"<State Animation: 138>\n<Category: Disease>\n<Category: Mental>\n<Custom Confirm Effect>\nif (Math.random() < 0.3 && action.isAttack()) {\n  // 30% chance to heal instead of attack\n  value = -value * 0.5; // Convert damage to healing at 50% rate\n  BattleManager._logWindow.push('addText', this.name() + ' sympathizes with the enemy and heals them instead!');\n}\nreturn value;\n</Custom Confirm Effect>","overlay":0,"priority":70,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":85,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1618,"maxTurns":8,"message1":" develops Munchausen Syndrome!","message2":" has Munchausen Syndrome!","message3":" is faking symptoms!","message4":" no longer has Munchausen Syndrome!","minTurns":4,"motion":1,"name":"Munchausen","note":"<State Animation: 139>\n<Category: Disease>\n<Category: Mental>\n<Custom Turn Start Effect>\nvar fakeStates = [4, 5, 6, 7, 8]; // Poison, Blind, Silence, Rage, Confusion\nvar randomState = fakeStates[Math.floor(Math.random() * fakeStates.length)];\nBattleManager._logWindow.push('addText', this.name() + ' appears to have ' + $dataStates[randomState].name + ' but is faking it!');\n</Custom Turn Start Effect>","overlay":0,"priority":55,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":7,"value":1.2}]},
{"id":86,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1619,"maxTurns":7,"message1":" feels a phantom limb!","message2":" has phantom limb syndrome!","message3":" is attacking with limbs that aren't there!","message4":" no longer feels phantom limbs!","minTurns":3,"motion":1,"name":"Phantom Limb","note":"<State Animation: 140>\n<Category: Disease>\n<Category: Physical>\n<Custom Confirm Effect>\nif (action.isAttack()) {\n  if (Math.random() < 0.5) {\n    // 50% chance to double damage\n    value *= 2;\n    BattleManager._logWindow.push('addText', this.name() + ' attacks with a phantom limb for double damage!');\n  } else {\n    // 50% chance to miss\n    value = 0;\n    BattleManager._logWindow.push('addText', this.name() + ' swings with a phantom limb and misses!');\n  }\n}\nreturn value;\n</Custom Confirm Effect>","overlay":0,"priority":60,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":87,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1620,"maxTurns":10,"message1":" begins aging rapidly!","message2":" has Progeria!","message3":" is aging before your eyes!","message4":" is no longer aging rapidly!","minTurns":5,"motion":1,"name":"Progeria","note":"<State Animation: 141>\n<Category: Disease>\n<Category: Physical>\n<Custom Turn End Effect>\nif (this._stateTurns[71] && this._stateTurns[71] > 0) {\n  // Increase MAT buff as condition progresses\n  var currentTurn = this._stateTurns[71];\n  var maxTurn = 10;\n  var ratio = (maxTurn - currentTurn) / maxTurn;\n  this.addBuff(4, 1); // Add MAT buff\n}\n</Custom Turn End Effect>","overlay":0,"priority":65,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":0.8},{"code":21,"dataId":4,"value":1.3},{"code":21,"dataId":6,"value":0.7}]},
{"id":88,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1621,"maxTurns":6,"message1":" develops Synesthesia!","message2":" has Synesthesia!","message3":" is seeing sounds and hearing colors!","message4":" no longer has Synesthesia!","minTurns":3,"motion":1,"name":"Synesthesia","note":"<State Animation: 142>\n<Category: Disease>\n<Category: Mental>\n<Custom Action Start Effect>\nif (Math.random() < 0.2) {\n  // 20% chance to get confused\n  this.addState(8); // Add confusion state\n  BattleManager._logWindow.push('addText', this.name() + ' is overwhelmed by sensory crossing!');\n} else if (Math.random() < 0.3) {\n  // 30% chance to gain insight\n  this.addBuff(4, 2); // Add MAT buff\n  BattleManager._logWindow.push('addText', this.name() + ' gains insight from their unique perception!');\n}\n</Custom Action Start Effect>","overlay":0,"priority":55,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":4,"value":1.2},{"code":21,"dataId":5,"value":1.2}]},
{"id":89,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1622,"maxTurns":5,"message1":" develops Affluenza!","message2":" has Affluenza!","message3":" is too privileged to fight properly!","message4":" is no longer afflicted with Affluenza!","minTurns":3,"motion":1,"name":"Affluenza","note":"<State Animation: 143>\n<Category: Disease>\n<Category: Mental>\n<Custom Action Start Effect>\nif (Math.random() < 0.3) {\n  // 30% chance to bribe enemy\n  var gold = 50 + Math.floor(Math.random() * 50);\n  $gameParty.loseGold(gold);\n  var targets = this.opponentsUnit().aliveMembers();\n  if (targets.length > 0) {\n    var target = targets[Math.floor(Math.random() * targets.length)];\n    target.addState(9); // Add fascination state\n    BattleManager._logWindow.push('addText', this.name() + ' bribes ' + target.name() + ' with ' + gold + ' gold!');\n  }\n}\n</Custom Action Start Effect>","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":0.7},{"code":21,"dataId":3,"value":0.7}]},
{"id":90,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1623,"maxTurns":7,"message1":" develops Impostor Syndrome!","message2":" has Impostor Syndrome!","message3":" doubts their abilities!","message4":" overcomes their Impostor Syndrome!","minTurns":4,"motion":1,"name":"Impostor Syndrome","note":"<State Animation: 144>\n<Category: Disease>\n<Category: Mental>\n<Custom Confirm Effect>\nif (action.isAttack() || action.isMagicSkill()) {\n  if (Math.random() < 0.7) {\n    // 70% chance to reduce damage\n    value *= 0.7;\n    BattleManager._logWindow.push('addText', this.name() + ' hesitates due to self-doubt!');\n  } else {\n    // 30% chance to overcompensate and increase damage\n    value *= 1.5;\n    BattleManager._logWindow.push('addText', this.name() + ' overcompensates and hits harder!');\n  }\n}\nreturn value;\n</Custom Confirm Effect>","overlay":0,"priority":55,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":0.8},{"code":21,"dataId":4,"value":0.8}]},
{"id":91,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1624,"maxTurns":6,"message1":" develops Digital Dementia!","message2":" has Digital Dementia!","message3":" is forgetting how to use skills!","message4":" recovers from Digital Dementia!","minTurns":3,"motion":1,"name":"Digital Dementia","note":"<State Animation: 186>\n<Category: Disease>\n<Category: Technological>\n<Custom Action Start Effect>\nif (Math.random() < 0.3) {\n  // 30% chance to forget skill\n  BattleManager._logWindow.push('addText', this.name() + ' forgets how to use their skill!');\n  return false; // Cancel the action\n} else if (Math.random() < 0.2) {\n  // 20% chance for critical hit\n  this._actions[0]._criticalRate = 1;\n  BattleManager._logWindow.push('addText', this.name() + ' has a moment of digital clarity!');\n}\n</Custom Action Start Effect>","overlay":0,"priority":65,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":22,"dataId":0,"value":-0.2}]},
{"id":92,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1625,"maxTurns":8,"message1":" develops Wi-Fi Allergy!","message2":" has Wi-Fi Allergy!","message3":" is sensitive to wireless signals!","message4":" is no longer allergic to Wi-Fi!","minTurns":4,"motion":1,"name":"Wi-Fi Allergy","note":"<State Animation: 187>\n<Category: Disease>\n<Category: Technological>\n<Custom Regenerate Effect>\nvar damage = Math.floor(this.mhp * 0.03);\nthis.gainHp(-damage);\nBattleManager._logWindow.push('addText', this.name() + ' takes ' + damage + ' damage from wireless signals!');\n</Custom Regenerate Effect>","overlay":0,"priority":60,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":11,"dataId":5,"value":0.7},{"code":22,"dataId":7,"value":-0.03}]},
{"id":93,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1626,"maxTurns":7,"message1":"'s body begins fusing with technology!","message2":" has Techno-Organic Fusion!","message3":"'s body is partially technological!","message4":"'s body returns to normal!","minTurns":4,"motion":1,"name":"Techno-Organic Fusion","note":"<State Animation: 188>\n<Category: Disease>\n<Category: Technological>\n<Category: Mutant>\n<Custom Turn Start Effect>\nvar paramId = Math.floor(Math.random() * 8); // Random parameter\nvar buffOrDebuff = Math.random() < 0.5 ? 1 : -1; // 50% chance for buff or debuff\nvar bodyParts = ['arm', 'leg', 'eye', 'ear', 'finger', 'spine', 'brain'];\nvar randomPart = bodyParts[Math.floor(Math.random() * bodyParts.length)];\nvar techParts = ['circuit', 'processor', 'antenna', 'battery', 'screen', 'speaker', 'camera'];\nvar randomTech = techParts[Math.floor(Math.random() * techParts.length)];\nif (buffOrDebuff > 0) {\n  this.addBuff(paramId, 2);\n  BattleManager._logWindow.push('addText', this.name() + '\\'s ' + randomPart + ' transforms into a ' + randomTech + '!');\n} else {\n  this.addDebuff(paramId, 2);\n  BattleManager._logWindow.push('addText', this.name() + '\\'s ' + randomPart + ' malfunctions as a ' + randomTech + '!');\n}\n</Custom Turn Start Effect>","overlay":0,"priority":70,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":94,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1627,"maxTurns":10,"message1":" starts hoarding radiation!","message2":" has Rad-Hoarder Syndrome!","message3":" is collecting harmful radiation!","message4":" stops hoarding radiation!","minTurns":5,"motion":1,"name":"Rad-Hoarder Syndrome","note":"<State Animation: 189>\n<Category: Disease>\n<Category: Post-Apocalyptic>\n<Custom Turn End Effect>\nif (this._stateTurns[81] && this._stateTurns[81] > 0) {\n  // As condition progresses, gain more benefits\n  var currentTurn = this._stateTurns[81];\n  var maxTurn = 10;\n  var progress = (maxTurn - currentTurn) / maxTurn;\n  if (progress > 0.5) {\n    // After halfway through, start gaining benefits\n    this.addBuff(2, 1); // Add ATK buff\n    this.addBuff(4, 1); // Add MAT buff\n    BattleManager._logWindow.push('addText', this.name() + ' gains power from radiation!');\n  }\n}\n</Custom Turn End Effect>","overlay":0,"priority":65,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":11,"dataId":5,"value":0.5},{"code":22,"dataId":7,"value":-0.05}]},
{"id":95,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1628,"maxTurns":6,"message1":" becomes nostalgic for the old world!","message2":" has Wasteland Nostalgia!","message3":" is daydreaming about pre-apocalypse times!","message4":" stops dwelling on the past!","minTurns":3,"motion":1,"name":"Wasteland Nostalgia","note":"<State Animation: 190>\n<Category: Disease>\n<Category: Post-Apocalyptic>\n<Category: Mental>\n<Custom Action Start Effect>\nif (Math.random() < 0.3) {\n  // 30% chance to miss turn\n  BattleManager._logWindow.push('addText', this.name() + ' gets lost in memories of the old world...');\n  return false; // Cancel the action\n} else if (Math.random() < 0.4) {\n  // 40% chance to gain inspiration\n  this.addBuff(4, 2); // Add MAT buff\n  BattleManager._logWindow.push('addText', this.name() + ' is inspired by memories of the past!');\n}\n</Custom Action Start Effect>","overlay":0,"priority":55,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":4,"value":1.3}]},
{"id":96,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1629,"maxTurns":7,"message1":" develops Bunker Fever!","message2":" has Bunker Fever!","message3":" is paranoid and defensive!","message4":" overcomes Bunker Fever!","minTurns":4,"motion":1,"name":"Bunker Fever","note":"<State Animation: 191>\n<Category: Disease>\n<Category: Post-Apocalyptic>\n<Category: Mental>\n<Custom Turn Start Effect>\nif (Math.random() < 0.2) {\n  // 20% chance for panic attack\n  this.addState(8); // Add confusion state\n  BattleManager._logWindow.push('addText', this.name() + ' has a panic attack!');\n}\n</Custom Turn Start Effect>","overlay":0,"priority":60,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":3,"value":1.3},{"code":21,"dataId":5,"value":1.3}]},
{"id":97,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1630,"maxTurns":8,"message1":" grows an extra limb!","message2":" has an extra limb!","message3":" is struggling to coordinate their extra limb!","message4":"'s extra limb disappears!","minTurns":4,"motion":1,"name":"Spontaneous Extra Limb","note":"<State Animation: 192>\n<Category: Disease>\n<Category: Mutant>\n<Custom Confirm Effect>\nif (action.isAttack()) {\n  if (Math.random() < 0.4) {\n    // 40% chance for extra attack\n    var extraDamage = Math.floor(value * 0.5);\n    BattleManager._logWindow.push('addText', this.name() + ' attacks with their extra limb for ' + extraDamage + ' damage!');\n    value += extraDamage;\n  } else if (Math.random() < 0.3) {\n    // 30% chance to fumble\n    value *= 0.5;\n    BattleManager._logWindow.push('addText', this.name() + ' fumbles with their extra limb!');\n  }\n}\nreturn value;\n</Custom Confirm Effect>","overlay":0,"priority":70,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":1.3},{"code":21,"dataId":6,"value":0.7}]},
{"id":98,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1631,"maxTurns":9,"message1":" is infected with beneficial parasites!","message2":" has beneficial parasites!","message3":" is being enhanced by parasites!","message4":" is free of parasites!","minTurns":5,"motion":1,"name":"Beneficial Parasites","note":"<State Animation: 193>\n<Category: Disease>\n<Category: Mutant>\n<Custom Regenerate Effect>\nvar damage = Math.floor(this.mhp * 0.04);\nthis.gainHp(-damage);\nBattleManager._logWindow.push('addText', this.name() + '\\'s parasites consume ' + damage + ' HP but enhance performance!');\n</Custom Regenerate Effect>","overlay":0,"priority":65,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":1.2},{"code":21,"dataId":6,"value":1.2},{"code":22,"dataId":7,"value":-0.04}]},
{"id":99,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1632,"maxTurns":7,"message1":"'s skin begins to glow!","message2":" has glowing skin!","message3":" is illuminating the area!","message4":"'s skin stops glowing!","minTurns":4,"motion":1,"name":"Glowing Skin","note":"<State Animation: 194>\n<Category: Disease>\n<Category: Mutant>\n<Custom Turn Start Effect>\nif (Math.random() < 0.2) {\n  // 20% chance to find an item\n  BattleManager._logWindow.push('addText', this.name() + '\\'s glow reveals hidden treasures!');\n}\n</Custom Turn Start Effect>\n<Custom Select Effect>\n// Enemies are more likely to target this character\nif (this.isActor() && Math.random() < 0.3) {\n  BattleManager._logWindow.push('addText', this.name() + '\\'s glow attracts enemy attention!');\n}\n</Custom Select Effect>","overlay":3,"priority":60,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":11,"dataId":5,"value":0.6}]},
{"id":100,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1633,"maxTurns":6,"message1":" develops Bottle Cap Fever!","message2":" has Bottle Cap Fever!","message3":" is obsessed with collecting bottle caps!","message4":" is no longer obsessed with bottle caps!","minTurns":3,"motion":1,"name":"Bottle Cap Fever","note":"<State Animation: 195>\n<Category: Disease>\n<Category: Economic>\n<Custom Action Start Effect>\nif (Math.random() < 0.4 && action.isAttack()) {\n  // 40% chance to steal instead of attack\n  var gold = 10 + Math.floor(Math.random() * 50);\n  $gameParty.gainGold(gold);\n  BattleManager._logWindow.push('addText', this.name() + ' steals ' + gold + ' bottle caps instead of attacking!');\n  return false; // Cancel the attack\n}\n</Custom Action Start Effect>","overlay":0,"priority":55,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":7,"value":1.3}]},
{"id":101,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1634,"maxTurns":5,"message1":" develops Barter Addiction!","message2":" has Barter Addiction!","message3":" keeps trying to trade with enemies!","message4":" is no longer addicted to bartering!","minTurns":3,"motion":1,"name":"Barter Addiction","note":"<State Animation: 196>\n<Category: Disease>\n<Category: Economic>\n<Custom Action Start Effect>\nif (Math.random() < 0.3 && action.isAttack()) {\n  // 30% chance to attempt bartering\n  var targets = this.opponentsUnit().aliveMembers();\n  if (targets.length > 0) {\n    var target = targets[Math.floor(Math.random() * targets.length)];\n    if (Math.random() < 0.5) {\n      // 50% chance for successful trade\n      var gold = 20 + Math.floor(Math.random() * 30);\n      $gameParty.gainGold(gold);\n      BattleManager._logWindow.push('addText', this.name() + ' successfully barters with ' + target.name() + ' for ' + gold + ' gold!');\n    } else {\n      // 50% chance for failed trade\n      BattleManager._logWindow.push('addText', this.name() + ' fails to barter with ' + target.name() + '!');\n    }\n  }\n  return false; // Cancel the attack\n}\n</Custom Action Start Effect>","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":102,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1635,"maxTurns":8,"message1":" starts hoarding resources!","message2":" has Resource Hoarding!","message3":" is carrying too many items!","message4":" stops hoarding resources!","minTurns":4,"motion":1,"name":"Resource Hoarding","note":"<State Animation: 197>\n<Category: Disease>\n<Category: Economic>\n<Custom Turn End Effect>\nif (Math.random() < 0.2) {\n  // 20% chance to find an item\n  BattleManager._logWindow.push('addText', this.name() + ' finds a useful item in their hoard!');\n}\n</Custom Turn End Effect>","overlay":0,"priority":55,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":3,"value":0.8},{"code":21,"dataId":6,"value":0.8}]},
{"id":103,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1614,"maxTurns":5,"message1":" suddenly falls asleep!","message2":" is narcoleptic!","message3":" is sleeping at random intervals!","message4":" is no longer narcoleptic!","minTurns":3,"motion":2,"name":"Narcolepsy","note":"<State Animation: 135>\n<Category: Disease>\n<Category: Mental>\n<Custom Action Start Effect>\nif (Math.random() < 0.3) {\n  this.addState(10); // Add sleep state temporarily\n}\n</Custom Action Start Effect>","overlay":7,"priority":75,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100,"traits":[{"code":22,"dataId":0,"value":-0.3}]},
{"id":104,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1615,"maxTurns":7,"message1":" develops Tourette's!","message2":" has Tourette's!","message3":" is shouting random insults!","message4":" has overcome Tourette's!","minTurns":4,"motion":1,"name":"Tourette's","note":"<State Animation: 136>\n<Category: Disease>\n<Category: Mental>\n<Custom Action Start Effect>\nif (Math.random() < 0.4) {\n  // 40% chance to trigger effect\n  var targets = this.opponentsUnit().aliveMembers();\n  if (targets.length > 0) {\n    var target = targets[Math.floor(Math.random() * targets.length)];\n    if (Math.random() < 0.5) {\n      // 50% chance to damage\n      var damage = Math.floor(this.atk * 0.2);\n      target.gainHp(-damage);\n      BattleManager._logWindow.push('addText', this.name() + ' insults ' + target.name() + ' for ' + damage + ' damage!');\n    } else {\n      // 50% chance to enrage\n      target.addState(7); // Add rage state\n      BattleManager._logWindow.push('addText', this.name() + ' enrages ' + target.name() + ' with insults!');\n    }\n  }\n}\n</Custom Action Start Effect>","overlay":0,"priority":65,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":1.2}]},
{"id":105,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1616,"maxTurns":10,"message1":" becomes hypochondriac!","message2":" is hypochondriac!","message3":" is worried about imaginary diseases!","message4":" is no longer hypochondriac!","minTurns":5,"motion":1,"name":"Hypochondria","note":"<State Animation: 137>\n<Category: Disease>\n<Category: Mental>\n<Custom Regenerate Effect>\nif (Math.random() < 0.2) {\n  BattleManager._logWindow.push('addText', this.name() + ' complains about a disease they don't have!');\n}\n</Custom Regenerate Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":14,"dataId":11,"value":0.5},{"code":22,"dataId":7,"value":-0.02}]},
{"id":106,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1617,"maxTurns":6,"message1":" develops Stockholm Syndrome!","message2":" has Stockholm Syndrome!","message3":" is sympathizing with the enemy!","message4":" no longer has Stockholm Syndrome!","minTurns":3,"motion":1,"name":"Stockholm Syndrome","note":"<State Animation: 138>\n<Category: Disease>\n<Category: Mental>\n<Custom Confirm Effect>\nif (Math.random() < 0.3 && action.isAttack()) {\n  // 30% chance to heal instead of attack\n  value = -value * 0.5; // Convert damage to healing at 50% rate\n  BattleManager._logWindow.push('addText', this.name() + ' sympathizes with the enemy and heals them instead!');\n}\nreturn value;\n</Custom Confirm Effect>","overlay":0,"priority":70,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":107,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1618,"maxTurns":8,"message1":" develops Munchausen Syndrome!","message2":" has Munchausen Syndrome!","message3":" is faking symptoms!","message4":" no longer has Munchausen Syndrome!","minTurns":4,"motion":1,"name":"Munchausen","note":"<State Animation: 139>\n<Category: Disease>\n<Category: Mental>\n<Custom Turn Start Effect>\nvar fakeStates = [4, 5, 6, 7, 8]; // Poison, Blind, Silence, Rage, Confusion\nvar randomState = fakeStates[Math.floor(Math.random() * fakeStates.length)];\nBattleManager._logWindow.push('addText', this.name() + ' appears to have ' + $dataStates[randomState].name + ' but is faking it!');\n</Custom Turn Start Effect>","overlay":0,"priority":55,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":7,"value":1.2}]},
{"id":108,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1619,"maxTurns":7,"message1":" feels a phantom limb!","message2":" has phantom limb syndrome!","message3":" is attacking with limbs that aren't there!","message4":" no longer feels phantom limbs!","minTurns":3,"motion":1,"name":"Phantom Limb","note":"<State Animation: 140>\n<Category: Disease>\n<Category: Physical>\n<Custom Confirm Effect>\nif (action.isAttack()) {\n  if (Math.random() < 0.5) {\n    // 50% chance to double damage\n    value *= 2;\n    BattleManager._logWindow.push('addText', this.name() + ' attacks with a phantom limb for double damage!');\n  } else {\n    // 50% chance to miss\n    value = 0;\n    BattleManager._logWindow.push('addText', this.name() + ' swings with a phantom limb and misses!');\n  }\n}\nreturn value;\n</Custom Confirm Effect>","overlay":0,"priority":60,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":109,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1620,"maxTurns":10,"message1":" begins aging rapidly!","message2":" has Progeria!","message3":" is aging before your eyes!","message4":" is no longer aging rapidly!","minTurns":5,"motion":1,"name":"Progeria","note":"<State Animation: 141>\n<Category: Disease>\n<Category: Physical>\n<Custom Turn End Effect>\nif (this._stateTurns[71] && this._stateTurns[71] > 0) {\n  // Increase MAT buff as condition progresses\n  var currentTurn = this._stateTurns[71];\n  var maxTurn = 10;\n  var ratio = (maxTurn - currentTurn) / maxTurn;\n  this.addBuff(4, 1); // Add MAT buff\n}\n</Custom Turn End Effect>","overlay":0,"priority":65,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":0.8},{"code":21,"dataId":4,"value":1.3},{"code":21,"dataId":6,"value":0.7}]},
{"id":110,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1621,"maxTurns":6,"message1":" develops Synesthesia!","message2":" has Synesthesia!","message3":" is seeing sounds and hearing colors!","message4":" no longer has Synesthesia!","minTurns":3,"motion":1,"name":"Synesthesia","note":"<State Animation: 142>\n<Category: Disease>\n<Category: Mental>\n<Custom Action Start Effect>\nif (Math.random() < 0.2) {\n  // 20% chance to get confused\n  this.addState(8); // Add confusion state\n  BattleManager._logWindow.push('addText', this.name() + ' is overwhelmed by sensory crossing!');\n} else if (Math.random() < 0.3) {\n  // 30% chance to gain insight\n  this.addBuff(4, 2); // Add MAT buff\n  BattleManager._logWindow.push('addText', this.name() + ' gains insight from their unique perception!');\n}\n</Custom Action Start Effect>","overlay":0,"priority":55,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":4,"value":1.2},{"code":21,"dataId":5,"value":1.2}]},
{"id":111,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1622,"maxTurns":5,"message1":" develops Affluenza!","message2":" has Affluenza!","message3":" is too privileged to fight properly!","message4":" is no longer afflicted with Affluenza!","minTurns":3,"motion":1,"name":"Affluenza","note":"<State Animation: 143>\n<Category: Disease>\n<Category: Mental>\n<Custom Action Start Effect>\nif (Math.random() < 0.3) {\n  // 30% chance to bribe enemy\n  var gold = 50 + Math.floor(Math.random() * 50);\n  $gameParty.loseGold(gold);\n  var targets = this.opponentsUnit().aliveMembers();\n  if (targets.length > 0) {\n    var target = targets[Math.floor(Math.random() * targets.length)];\n    target.addState(9); // Add fascination state\n    BattleManager._logWindow.push('addText', this.name() + ' bribes ' + target.name() + ' with ' + gold + ' gold!');\n  }\n}\n</Custom Action Start Effect>","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":0.7},{"code":21,"dataId":3,"value":0.7}]},
{"id":112,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1623,"maxTurns":7,"message1":" develops Impostor Syndrome!","message2":" has Impostor Syndrome!","message3":" doubts their abilities!","message4":" overcomes their Impostor Syndrome!","minTurns":4,"motion":1,"name":"Impostor Syndrome","note":"<State Animation: 144>\n<Category: Disease>\n<Category: Mental>\n<Custom Confirm Effect>\nif (action.isAttack() || action.isMagicSkill()) {\n  if (Math.random() < 0.7) {\n    // 70% chance to reduce damage\n    value *= 0.7;\n    BattleManager._logWindow.push('addText', this.name() + ' hesitates due to self-doubt!');\n  } else {\n    // 30% chance to overcompensate and increase damage\n    value *= 1.5;\n    BattleManager._logWindow.push('addText', this.name() + ' overcompensates and hits harder!');\n  }\n}\nreturn value;\n</Custom Confirm Effect>","overlay":0,"priority":55,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":0.8},{"code":21,"dataId":4,"value":0.8}]},
{"id":113,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1624,"maxTurns":6,"message1":" develops Digital Dementia!","message2":" has Digital Dementia!","message3":" is forgetting how to use skills!","message4":" recovers from Digital Dementia!","minTurns":3,"motion":1,"name":"Digital Dementia","note":"<State Animation: 186>\n<Category: Disease>\n<Category: Technological>\n<Custom Action Start Effect>\nif (Math.random() < 0.3) {\n  // 30% chance to forget skill\n  BattleManager._logWindow.push('addText', this.name() + ' forgets how to use their skill!');\n  return false; // Cancel the action\n} else if (Math.random() < 0.2) {\n  // 20% chance for critical hit\n  this._actions[0]._criticalRate = 1;\n  BattleManager._logWindow.push('addText', this.name() + ' has a moment of digital clarity!');\n}\n</Custom Action Start Effect>","overlay":0,"priority":65,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":22,"dataId":0,"value":-0.2}]},
{"id":114,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1625,"maxTurns":8,"message1":" develops Wi-Fi Allergy!","message2":" has Wi-Fi Allergy!","message3":" is sensitive to wireless signals!","message4":" is no longer allergic to Wi-Fi!","minTurns":4,"motion":1,"name":"Wi-Fi Allergy","note":"<State Animation: 187>\n<Category: Disease>\n<Category: Technological>\n<Custom Regenerate Effect>\nvar damage = Math.floor(this.mhp * 0.03);\nthis.gainHp(-damage);\nBattleManager._logWindow.push('addText', this.name() + ' takes ' + damage + ' damage from wireless signals!');\n</Custom Regenerate Effect>","overlay":0,"priority":60,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":11,"dataId":5,"value":0.7},{"code":22,"dataId":7,"value":-0.03}]},
{"id":115,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1626,"maxTurns":7,"message1":"'s body begins fusing with technology!","message2":" has Techno-Organic Fusion!","message3":"'s body is partially technological!","message4":"'s body returns to normal!","minTurns":4,"motion":1,"name":"Techno-Organic Fusion","note":"<State Animation: 188>\n<Category: Disease>\n<Category: Technological>\n<Category: Mutant>\n<Custom Turn Start Effect>\nvar paramId = Math.floor(Math.random() * 8); // Random parameter\nvar buffOrDebuff = Math.random() < 0.5 ? 1 : -1; // 50% chance for buff or debuff\nvar bodyParts = ['arm', 'leg', 'eye', 'ear', 'finger', 'spine', 'brain'];\nvar randomPart = bodyParts[Math.floor(Math.random() * bodyParts.length)];\nvar techParts = ['circuit', 'processor', 'antenna', 'battery', 'screen', 'speaker', 'camera'];\nvar randomTech = techParts[Math.floor(Math.random() * techParts.length)];\nif (buffOrDebuff > 0) {\n  this.addBuff(paramId, 2);\n  BattleManager._logWindow.push('addText', this.name() + '\\'s ' + randomPart + ' transforms into a ' + randomTech + '!');\n} else {\n  this.addDebuff(paramId, 2);\n  BattleManager._logWindow.push('addText', this.name() + '\\'s ' + randomPart + ' malfunctions as a ' + randomTech + '!');\n}\n</Custom Turn Start Effect>","overlay":0,"priority":70,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":116,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1627,"maxTurns":10,"message1":" starts hoarding radiation!","message2":" has Rad-Hoarder Syndrome!","message3":" is collecting harmful radiation!","message4":" stops hoarding radiation!","minTurns":5,"motion":1,"name":"Rad-Hoarder Syndrome","note":"<State Animation: 189>\n<Category: Disease>\n<Category: Post-Apocalyptic>\n<Custom Turn End Effect>\nif (this._stateTurns[81] && this._stateTurns[81] > 0) {\n  // As condition progresses, gain more benefits\n  var currentTurn = this._stateTurns[81];\n  var maxTurn = 10;\n  var progress = (maxTurn - currentTurn) / maxTurn;\n  if (progress > 0.5) {\n    // After halfway through, start gaining benefits\n    this.addBuff(2, 1); // Add ATK buff\n    this.addBuff(4, 1); // Add MAT buff\n    BattleManager._logWindow.push('addText', this.name() + ' gains power from radiation!');\n  }\n}\n</Custom Turn End Effect>","overlay":0,"priority":65,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":11,"dataId":5,"value":0.5},{"code":22,"dataId":7,"value":-0.05}]},
{"id":117,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1628,"maxTurns":6,"message1":" becomes nostalgic for the old world!","message2":" has Wasteland Nostalgia!","message3":" is daydreaming about pre-apocalypse times!","message4":" stops dwelling on the past!","minTurns":3,"motion":1,"name":"Wasteland Nostalgia","note":"<State Animation: 190>\n<Category: Disease>\n<Category: Post-Apocalyptic>\n<Category: Mental>\n<Custom Action Start Effect>\nif (Math.random() < 0.3) {\n  // 30% chance to miss turn\n  BattleManager._logWindow.push('addText', this.name() + ' gets lost in memories of the old world...');\n  return false; // Cancel the action\n} else if (Math.random() < 0.4) {\n  // 40% chance to gain inspiration\n  this.addBuff(4, 2); // Add MAT buff\n  BattleManager._logWindow.push('addText', this.name() + ' is inspired by memories of the past!');\n}\n</Custom Action Start Effect>","overlay":0,"priority":55,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":4,"value":1.3}]},
{"id":118,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1629,"maxTurns":7,"message1":" develops Bunker Fever!","message2":" has Bunker Fever!","message3":" is paranoid and defensive!","message4":" overcomes Bunker Fever!","minTurns":4,"motion":1,"name":"Bunker Fever","note":"<State Animation: 191>\n<Category: Disease>\n<Category: Post-Apocalyptic>\n<Category: Mental>\n<Custom Turn Start Effect>\nif (Math.random() < 0.2) {\n  // 20% chance for panic attack\n  this.addState(8); // Add confusion state\n  BattleManager._logWindow.push('addText', this.name() + ' has a panic attack!');\n}\n</Custom Turn Start Effect>","overlay":0,"priority":60,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":3,"value":1.3},{"code":21,"dataId":5,"value":1.3}]},
{"id":119,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1630,"maxTurns":8,"message1":" grows an extra limb!","message2":" has an extra limb!","message3":" is struggling to coordinate their extra limb!","message4":"'s extra limb disappears!","minTurns":4,"motion":1,"name":"Spontaneous Extra Limb","note":"<State Animation: 192>\n<Category: Disease>\n<Category: Mutant>\n<Custom Confirm Effect>\nif (action.isAttack()) {\n  if (Math.random() < 0.4) {\n    // 40% chance for extra attack\n    var extraDamage = Math.floor(value * 0.5);\n    BattleManager._logWindow.push('addText', this.name() + ' attacks with their extra limb for ' + extraDamage + ' damage!');\n    value += extraDamage;\n  } else if (Math.random() < 0.3) {\n    // 30% chance to fumble\n    value *= 0.5;\n    BattleManager._logWindow.push('addText', this.name() + ' fumbles with their extra limb!');\n  }\n}\nreturn value;\n</Custom Confirm Effect>","overlay":0,"priority":70,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":1.3},{"code":21,"dataId":6,"value":0.7}]},
{"id":120,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1631,"maxTurns":9,"message1":" is infected with beneficial parasites!","message2":" has beneficial parasites!","message3":" is being enhanced by parasites!","message4":" is free of parasites!","minTurns":5,"motion":1,"name":"Beneficial Parasites","note":"<State Animation: 193>\n<Category: Disease>\n<Category: Mutant>\n<Custom Regenerate Effect>\nvar damage = Math.floor(this.mhp * 0.04);\nthis.gainHp(-damage);\nBattleManager._logWindow.push('addText', this.name() + '\\'s parasites consume ' + damage + ' HP but enhance performance!');\n</Custom Regenerate Effect>","overlay":0,"priority":65,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":1.2},{"code":21,"dataId":6,"value":1.2},{"code":22,"dataId":7,"value":-0.04}]},
{"id":121,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1632,"maxTurns":7,"message1":"'s skin begins to glow!","message2":" has glowing skin!","message3":" is illuminating the area!","message4":"'s skin stops glowing!","minTurns":4,"motion":1,"name":"Glowing Skin","note":"<State Animation: 194>\n<Category: Disease>\n<Category: Mutant>\n<Custom Turn Start Effect>\nif (Math.random() < 0.2) {\n  // 20% chance to find an item\n  BattleManager._logWindow.push('addText', this.name() + '\\'s glow reveals hidden treasures!');\n}\n</Custom Turn Start Effect>\n<Custom Select Effect>\n// Enemies are more likely to target this character\nif (this.isActor() && Math.random() < 0.3) {\n  BattleManager._logWindow.push('addText', this.name() + '\\'s glow attracts enemy attention!');\n}\n</Custom Select Effect>","overlay":3,"priority":60,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":11,"dataId":5,"value":0.6}]},
{"id":122,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1633,"maxTurns":6,"message1":" develops Bottle Cap Fever!","message2":" has Bottle Cap Fever!","message3":" is obsessed with collecting bottle caps!","message4":" is no longer obsessed with bottle caps!","minTurns":3,"motion":1,"name":"Bottle Cap Fever","note":"<State Animation: 195>\n<Category: Disease>\n<Category: Economic>\n<Custom Action Start Effect>\nif (Math.random() < 0.4 && action.isAttack()) {\n  // 40% chance to steal instead of attack\n  var gold = 10 + Math.floor(Math.random() * 50);\n  $gameParty.gainGold(gold);\n  BattleManager._logWindow.push('addText', this.name() + ' steals ' + gold + ' bottle caps instead of attacking!');\n  return false; // Cancel the attack\n}\n</Custom Action Start Effect>","overlay":0,"priority":55,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":7,"value":1.3}]},
{"id":123,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1634,"maxTurns":5,"message1":" develops Barter Addiction!","message2":" has Barter Addiction!","message3":" keeps trying to trade with enemies!","message4":" is no longer addicted to bartering!","minTurns":3,"motion":1,"name":"Barter Addiction","note":"<State Animation: 196>\n<Category: Disease>\n<Category: Economic>\n<Custom Action Start Effect>\nif (Math.random() < 0.3 && action.isAttack()) {\n  // 30% chance to attempt bartering\n  var targets = this.opponentsUnit().aliveMembers();\n  if (targets.length > 0) {\n    var target = targets[Math.floor(Math.random() * targets.length)];\n    if (Math.random() < 0.5) {\n      // 50% chance for successful trade\n      var gold = 20 + Math.floor(Math.random() * 30);\n      $gameParty.gainGold(gold);\n      BattleManager._logWindow.push('addText', this.name() + ' successfully barters with ' + target.name() + ' for ' + gold + ' gold!');\n    } else {\n      // 50% chance for failed trade\n      BattleManager._logWindow.push('addText', this.name() + ' fails to barter with ' + target.name() + '!');\n    }\n  }\n  return false; // Cancel the attack\n}\n</Custom Action Start Effect>","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":124,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1635,"maxTurns":8,"message1":" starts hoarding resources!","message2":" has Resource Hoarding!","message3":" is carrying too many items!","message4":" stops hoarding resources!","minTurns":4,"motion":1,"name":"Resource Hoarding","note":"<State Animation: 197>\n<Category: Disease>\n<Category: Economic>\n<Custom Turn End Effect>\nif (Math.random() < 0.2) {\n  // 20% chance to find an item\n  BattleManager._logWindow.push('addText', this.name() + ' finds a useful item in their hoard!');\n}\n</Custom Turn End Effect>","overlay":0,"priority":55,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":3,"value":0.8},{"code":21,"dataId":6,"value":0.8}]},
{"id":125,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1636,"maxTurns":3,"message1":" gets the hiccups!","message2":" has hiccups!","message3":" is hiccupping uncontrollably!","message4":"'s hiccups finally stop!","minTurns":2,"motion":1,"name":"Chronic Hiccups","note":"<State Animation: 208>\n<Category: MinorAilment>\n<Custom Action Start Effect>\nif (Math.random() < 0.2) {\n  // 20% chance to interrupt action\n  BattleManager._logWindow.push('addText', this.name() + ' *hic* can\\'t speak properly!');\n  return false; // Cancel the action\n}\n</Custom Action Start Effect>\n<Ridicule Trigger: 'hiccups'>","overlay":0,"priority":40,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":126,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1637,"maxTurns":4,"message1":" starts sneezing!","message2":" has allergies!","message3":" keeps sneezing!","message4":"'s allergies clear up!","minTurns":2,"motion":1,"name":"Seasonal Allergies","note":"<State Animation: 209>\n<Category: MinorAilment>\n<Custom Turn Start Effect>\nif (Math.random() < 0.3) {\n  // 30% chance to sneeze\n  BattleManager._logWindow.push('addText', this.name() + ' has a sneezing fit! ACHOO!');\n}\n</Custom Turn Start Effect>\n<Ridicule Trigger: 'allergies'>","overlay":0,"priority":40,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":22,"dataId":0,"value":-0.05}]},
{"id":127,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1638,"maxTurns":4,"message1":"'s hair is sticking up everywhere!","message2":" has terrible bedhead!","message3":"'s hair refuses to be tamed!","message4":" finally fixes their hair!","minTurns":3,"motion":1,"name":"Bedhead","note":"<State Animation: 210>\n<Category: MinorAilment>\n<Ridicule Trigger: 'hair'>","overlay":0,"priority":30,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":128,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1639,"maxTurns":3,"message1":"'s breath suddenly smells terrible!","message2":" has bad breath!","message3":"'s breath could knock out a skunk!","message4":"'s breath returns to normal!","minTurns":2,"motion":1,"name":"Bad Breath","note":"<State Animation: 211>\n<Category: MinorAilment>\n<Ridicule Trigger: 'breath'>","overlay":0,"priority":35,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":129,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1640,"maxTurns":4,"message1":" starts sweating profusely!","message2":" is sweating buckets!","message3":" is drenched in sweat!","message4":" stops sweating excessively!","minTurns":2,"motion":1,"name":"Excessive Sweating","note":"<State Animation: 212>\n<Category: MinorAilment>\n<Ridicule Trigger: 'sweat'>","overlay":0,"priority":35,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":130,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1641,"maxTurns":5,"message1":" develops athlete's foot!","message2":" has athlete's foot!","message3":" can't stop scratching their feet!","message4":"'s athlete's foot clears up!","minTurns":3,"motion":1,"name":"Athlete's Foot","note":"<State Animation: 213>\n<Category: MinorAilment>\n<Custom Turn Start Effect>\nif (Math.random() < 0.3) {\n  // 30% chance to scratch\n  BattleManager._logWindow.push('addText', this.name() + ' stops to scratch their foot!');\n}\n</Custom Turn Start Effect>\n<Ridicule Trigger: 'foot'>","overlay":0,"priority":35,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":6,"value":0.95}]},
{"id":131,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1642,"maxTurns":4,"message1":" starts coughing!","message2":" has a persistent cough!","message3":" keeps coughing!","message4":"'s cough finally subsides!","minTurns":2,"motion":1,"name":"Persistent Cough","note":"<State Animation: 214>\n<Category: MinorAilment>\n<Custom Action Start Effect>\nif (Math.random() < 0.2) {\n  // 20% chance to cough during action\n  BattleManager._logWindow.push('addText', this.name() + ' has a coughing fit!');\n}\n</Custom Action Start Effect>\n<Ridicule Trigger: 'cough'>","overlay":0,"priority":40,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":132,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1643,"maxTurns":3,"message1":"'s eye starts twitching!","message2":" has an eye twitch!","message3":"'s eye won't stop twitching!","message4":"'s eye twitch stops!","minTurns":2,"motion":1,"name":"Eye Twitch","note":"<State Animation: 215>\n<Category: MinorAilment>\n<Ridicule Trigger: 'twitch'>","overlay":0,"priority":30,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":133,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1644,"maxTurns":4,"message1":"'s nose starts running!","message2":" has a runny nose!","message3":" keeps sniffling!","message4":"'s nose stops running!","minTurns":2,"motion":1,"name":"Runny Nose","note":"<State Animation: 216>\n<Category: MinorAilment>\n<Custom Turn Start Effect>\nif (Math.random() < 0.4) {\n  // 40% chance to sniffle\n  BattleManager._logWindow.push('addText', this.name() + ' sniffles loudly!');\n}\n</Custom Turn Start Effect>\n<Ridicule Trigger: 'nose'>","overlay":0,"priority":35,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":134,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1645,"maxTurns":5,"message1":" breaks out in acne!","message2":" has an acne breakout!","message3":"'s face is covered in pimples!","message4":"'s acne clears up!","minTurns":3,"motion":1,"name":"Acne Breakout","note":"<State Animation: 217>\n<Category: MinorAilment>\n<Ridicule Trigger: 'acne'>","overlay":0,"priority":30,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":135,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1646,"maxTurns":4,"message1":" loses their voice!","message2":" has laryngitis!","message3":" can barely speak above a whisper!","message4":"'s voice returns to normal!","minTurns":2,"motion":1,"name":"Laryngitis","note":"<State Animation: 218>\n<Category: MinorAilment>\n<Custom Action Start Effect>\nif (this._actions[0].isSkill() && Math.random() < 0.2) {\n  // 20% chance to fail verbal skills\n  BattleManager._logWindow.push('addText', this.name() + ' can\\'t speak loud enough to cast the spell!');\n  return false; // Cancel the action\n}\n</Custom Action Start Effect>\n<Ridicule Trigger: 'voice'>","overlay":0,"priority":40,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":136,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1614,"maxTurns":5,"message1":" suddenly falls asleep!","message2":" is narcoleptic!","message3":" is sleeping at random intervals!","message4":" is no longer narcoleptic!","minTurns":3,"motion":2,"name":"Narcolepsy","note":"<State Animation: 135>\n<Category: Disease>\n<Category: Mental>\n<Custom Action Start Effect>\nif (Math.random() < 0.3) {\n  this.addState(10); // Add sleep state temporarily\n}\n</Custom Action Start Effect>","overlay":7,"priority":75,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100,"traits":[{"code":22,"dataId":0,"value":-0.3}]},
{"id":137,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1615,"maxTurns":7,"message1":" develops Tourette's!","message2":" has Tourette's!","message3":" is shouting random insults!","message4":" has overcome Tourette's!","minTurns":4,"motion":1,"name":"Tourette's","note":"<State Animation: 136>\n<Category: Disease>\n<Category: Mental>\n<Custom Action Start Effect>\nif (Math.random() < 0.4) {\n  // 40% chance to trigger effect\n  var targets = this.opponentsUnit().aliveMembers();\n  if (targets.length > 0) {\n    var target = targets[Math.floor(Math.random() * targets.length)];\n    if (Math.random() < 0.5) {\n      // 50% chance to damage\n      var damage = Math.floor(this.atk * 0.2);\n      target.gainHp(-damage);\n      BattleManager._logWindow.push('addText', this.name() + ' insults ' + target.name() + ' for ' + damage + ' damage!');\n    } else {\n      // 50% chance to enrage\n      target.addState(7); // Add rage state\n      BattleManager._logWindow.push('addText', this.name() + ' enrages ' + target.name() + ' with insults!');\n    }\n  }\n}\n</Custom Action Start Effect>","overlay":0,"priority":65,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":1.2}]},
{"id":138,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1616,"maxTurns":10,"message1":" becomes hypochondriac!","message2":" is hypochondriac!","message3":" is worried about imaginary diseases!","message4":" is no longer hypochondriac!","minTurns":5,"motion":1,"name":"Hypochondria","note":"<State Animation: 137>\n<Category: Disease>\n<Category: Mental>\n<Custom Regenerate Effect>\nif (Math.random() < 0.2) {\n  BattleManager._logWindow.push('addText', this.name() + ' complains about a disease they don't have!');\n}\n</Custom Regenerate Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":14,"dataId":11,"value":0.5},{"code":22,"dataId":7,"value":-0.02}]},
{"id":139,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1617,"maxTurns":6,"message1":" develops Stockholm Syndrome!","message2":" has Stockholm Syndrome!","message3":" is sympathizing with the enemy!","message4":" no longer has Stockholm Syndrome!","minTurns":3,"motion":1,"name":"Stockholm Syndrome","note":"<State Animation: 138>\n<Category: Disease>\n<Category: Mental>\n<Custom Confirm Effect>\nif (Math.random() < 0.3 && action.isAttack()) {\n  // 30% chance to heal instead of attack\n  value = -value * 0.5; // Convert damage to healing at 50% rate\n  BattleManager._logWindow.push('addText', this.name() + ' sympathizes with the enemy and heals them instead!');\n}\nreturn value;\n</Custom Confirm Effect>","overlay":0,"priority":70,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":140,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1618,"maxTurns":8,"message1":" develops Munchausen Syndrome!","message2":" has Munchausen Syndrome!","message3":" is faking symptoms!","message4":" no longer has Munchausen Syndrome!","minTurns":4,"motion":1,"name":"Munchausen","note":"<State Animation: 139>\n<Category: Disease>\n<Category: Mental>\n<Custom Turn Start Effect>\nvar fakeStates = [4, 5, 6, 7, 8]; // Poison, Blind, Silence, Rage, Confusion\nvar randomState = fakeStates[Math.floor(Math.random() * fakeStates.length)];\nBattleManager._logWindow.push('addText', this.name() + ' appears to have ' + $dataStates[randomState].name + ' but is faking it!');\n</Custom Turn Start Effect>","overlay":0,"priority":55,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":7,"value":1.2}]},
{"id":141,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1619,"maxTurns":7,"message1":" feels a phantom limb!","message2":" has phantom limb syndrome!","message3":" is attacking with limbs that aren't there!","message4":" no longer feels phantom limbs!","minTurns":3,"motion":1,"name":"Phantom Limb","note":"<State Animation: 140>\n<Category: Disease>\n<Category: Physical>\n<Custom Confirm Effect>\nif (action.isAttack()) {\n  if (Math.random() < 0.5) {\n    // 50% chance to double damage\n    value *= 2;\n    BattleManager._logWindow.push('addText', this.name() + ' attacks with a phantom limb for double damage!');\n  } else {\n    // 50% chance to miss\n    value = 0;\n    BattleManager._logWindow.push('addText', this.name() + ' swings with a phantom limb and misses!');\n  }\n}\nreturn value;\n</Custom Confirm Effect>","overlay":0,"priority":60,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":142,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1620,"maxTurns":10,"message1":" begins aging rapidly!","message2":" has Progeria!","message3":" is aging before your eyes!","message4":" is no longer aging rapidly!","minTurns":5,"motion":1,"name":"Progeria","note":"<State Animation: 141>\n<Category: Disease>\n<Category: Physical>\n<Custom Turn End Effect>\nif (this._stateTurns[71] && this._stateTurns[71] > 0) {\n  // Increase MAT buff as condition progresses\n  var currentTurn = this._stateTurns[71];\n  var maxTurn = 10;\n  var ratio = (maxTurn - currentTurn) / maxTurn;\n  this.addBuff(4, 1); // Add MAT buff\n}\n</Custom Turn End Effect>","overlay":0,"priority":65,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":0.8},{"code":21,"dataId":4,"value":1.3},{"code":21,"dataId":6,"value":0.7}]},
{"id":143,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1621,"maxTurns":6,"message1":" develops Synesthesia!","message2":" has Synesthesia!","message3":" is seeing sounds and hearing colors!","message4":" no longer has Synesthesia!","minTurns":3,"motion":1,"name":"Synesthesia","note":"<State Animation: 142>\n<Category: Disease>\n<Category: Mental>\n<Custom Action Start Effect>\nif (Math.random() < 0.2) {\n  // 20% chance to get confused\n  this.addState(8); // Add confusion state\n  BattleManager._logWindow.push('addText', this.name() + ' is overwhelmed by sensory crossing!');\n} else if (Math.random() < 0.3) {\n  // 30% chance to gain insight\n  this.addBuff(4, 2); // Add MAT buff\n  BattleManager._logWindow.push('addText', this.name() + ' gains insight from their unique perception!');\n}\n</Custom Action Start Effect>","overlay":0,"priority":55,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":4,"value":1.2},{"code":21,"dataId":5,"value":1.2}]},
{"id":144,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1622,"maxTurns":5,"message1":" develops Affluenza!","message2":" has Affluenza!","message3":" is too privileged to fight properly!","message4":" is no longer afflicted with Affluenza!","minTurns":3,"motion":1,"name":"Affluenza","note":"<State Animation: 143>\n<Category: Disease>\n<Category: Mental>\n<Custom Action Start Effect>\nif (Math.random() < 0.3) {\n  // 30% chance to bribe enemy\n  var gold = 50 + Math.floor(Math.random() * 50);\n  $gameParty.loseGold(gold);\n  var targets = this.opponentsUnit().aliveMembers();\n  if (targets.length > 0) {\n    var target = targets[Math.floor(Math.random() * targets.length)];\n    target.addState(9); // Add fascination state\n    BattleManager._logWindow.push('addText', this.name() + ' bribes ' + target.name() + ' with ' + gold + ' gold!');\n  }\n}\n</Custom Action Start Effect>","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":0.7},{"code":21,"dataId":3,"value":0.7}]},
{"id":145,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1623,"maxTurns":7,"message1":" develops Impostor Syndrome!","message2":" has Impostor Syndrome!","message3":" doubts their abilities!","message4":" overcomes their Impostor Syndrome!","minTurns":4,"motion":1,"name":"Impostor Syndrome","note":"<State Animation: 144>\n<Category: Disease>\n<Category: Mental>\n<Custom Confirm Effect>\nif (action.isAttack() || action.isMagicSkill()) {\n  if (Math.random() < 0.7) {\n    // 70% chance to reduce damage\n    value *= 0.7;\n    BattleManager._logWindow.push('addText', this.name() + ' hesitates due to self-doubt!');\n  } else {\n    // 30% chance to overcompensate and increase damage\n    value *= 1.5;\n    BattleManager._logWindow.push('addText', this.name() + ' overcompensates and hits harder!');\n  }\n}\nreturn value;\n</Custom Confirm Effect>","overlay":0,"priority":55,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":0.8},{"code":21,"dataId":4,"value":0.8}]},
{"id":146,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1624,"maxTurns":6,"message1":" develops Digital Dementia!","message2":" has Digital Dementia!","message3":" is forgetting how to use skills!","message4":" recovers from Digital Dementia!","minTurns":3,"motion":1,"name":"Digital Dementia","note":"<State Animation: 186>\n<Category: Disease>\n<Category: Technological>\n<Custom Action Start Effect>\nif (Math.random() < 0.3) {\n  // 30% chance to forget skill\n  BattleManager._logWindow.push('addText', this.name() + ' forgets how to use their skill!');\n  return false; // Cancel the action\n} else if (Math.random() < 0.2) {\n  // 20% chance for critical hit\n  this._actions[0]._criticalRate = 1;\n  BattleManager._logWindow.push('addText', this.name() + ' has a moment of digital clarity!');\n}\n</Custom Action Start Effect>","overlay":0,"priority":65,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":22,"dataId":0,"value":-0.2}]},
{"id":147,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1625,"maxTurns":8,"message1":" develops Wi-Fi Allergy!","message2":" has Wi-Fi Allergy!","message3":" is sensitive to wireless signals!","message4":" is no longer allergic to Wi-Fi!","minTurns":4,"motion":1,"name":"Wi-Fi Allergy","note":"<State Animation: 187>\n<Category: Disease>\n<Category: Technological>\n<Custom Regenerate Effect>\nvar damage = Math.floor(this.mhp * 0.03);\nthis.gainHp(-damage);\nBattleManager._logWindow.push('addText', this.name() + ' takes ' + damage + ' damage from wireless signals!');\n</Custom Regenerate Effect>","overlay":0,"priority":60,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":11,"dataId":5,"value":0.7},{"code":22,"dataId":7,"value":-0.03}]},
{"id":148,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1626,"maxTurns":7,"message1":"'s body begins fusing with technology!","message2":" has Techno-Organic Fusion!","message3":"'s body is partially technological!","message4":"'s body returns to normal!","minTurns":4,"motion":1,"name":"Techno-Organic Fusion","note":"<State Animation: 188>\n<Category: Disease>\n<Category: Technological>\n<Category: Mutant>\n<Custom Turn Start Effect>\nvar paramId = Math.floor(Math.random() * 8); // Random parameter\nvar buffOrDebuff = Math.random() < 0.5 ? 1 : -1; // 50% chance for buff or debuff\nvar bodyParts = ['arm', 'leg', 'eye', 'ear', 'finger', 'spine', 'brain'];\nvar randomPart = bodyParts[Math.floor(Math.random() * bodyParts.length)];\nvar techParts = ['circuit', 'processor', 'antenna', 'battery', 'screen', 'speaker', 'camera'];\nvar randomTech = techParts[Math.floor(Math.random() * techParts.length)];\nif (buffOrDebuff > 0) {\n  this.addBuff(paramId, 2);\n  BattleManager._logWindow.push('addText', this.name() + '\\'s ' + randomPart + ' transforms into a ' + randomTech + '!');\n} else {\n  this.addDebuff(paramId, 2);\n  BattleManager._logWindow.push('addText', this.name() + '\\'s ' + randomPart + ' malfunctions as a ' + randomTech + '!');\n}\n</Custom Turn Start Effect>","overlay":0,"priority":70,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":149,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1627,"maxTurns":10,"message1":" starts hoarding radiation!","message2":" has Rad-Hoarder Syndrome!","message3":" is collecting harmful radiation!","message4":" stops hoarding radiation!","minTurns":5,"motion":1,"name":"Rad-Hoarder Syndrome","note":"<State Animation: 189>\n<Category: Disease>\n<Category: Post-Apocalyptic>\n<Custom Turn End Effect>\nif (this._stateTurns[81] && this._stateTurns[81] > 0) {\n  // As condition progresses, gain more benefits\n  var currentTurn = this._stateTurns[81];\n  var maxTurn = 10;\n  var progress = (maxTurn - currentTurn) / maxTurn;\n  if (progress > 0.5) {\n    // After halfway through, start gaining benefits\n    this.addBuff(2, 1); // Add ATK buff\n    this.addBuff(4, 1); // Add MAT buff\n    BattleManager._logWindow.push('addText', this.name() + ' gains power from radiation!');\n  }\n}\n</Custom Turn End Effect>","overlay":0,"priority":65,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":11,"dataId":5,"value":0.5},{"code":22,"dataId":7,"value":-0.05}]},
{"id":150,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1628,"maxTurns":6,"message1":" becomes nostalgic for the old world!","message2":" has Wasteland Nostalgia!","message3":" is daydreaming about pre-apocalypse times!","message4":" stops dwelling on the past!","minTurns":3,"motion":1,"name":"Wasteland Nostalgia","note":"<State Animation: 190>\n<Category: Disease>\n<Category: Post-Apocalyptic>\n<Category: Mental>\n<Custom Action Start Effect>\nif (Math.random() < 0.3) {\n  // 30% chance to miss turn\n  BattleManager._logWindow.push('addText', this.name() + ' gets lost in memories of the old world...');\n  return false; // Cancel the action\n} else if (Math.random() < 0.4) {\n  // 40% chance to gain inspiration\n  this.addBuff(4, 2); // Add MAT buff\n  BattleManager._logWindow.push('addText', this.name() + ' is inspired by memories of the past!');\n}\n</Custom Action Start Effect>","overlay":0,"priority":55,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":4,"value":1.3}]},
{"id":151,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1629,"maxTurns":7,"message1":" develops Bunker Fever!","message2":" has Bunker Fever!","message3":" is paranoid and defensive!","message4":" overcomes Bunker Fever!","minTurns":4,"motion":1,"name":"Bunker Fever","note":"<State Animation: 191>\n<Category: Disease>\n<Category: Post-Apocalyptic>\n<Category: Mental>\n<Custom Turn Start Effect>\nif (Math.random() < 0.2) {\n  // 20% chance for panic attack\n  this.addState(8); // Add confusion state\n  BattleManager._logWindow.push('addText', this.name() + ' has a panic attack!');\n}\n</Custom Turn Start Effect>","overlay":0,"priority":60,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":3,"value":1.3},{"code":21,"dataId":5,"value":1.3}]},
{"id":152,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1630,"maxTurns":8,"message1":" grows an extra limb!","message2":" has an extra limb!","message3":" is struggling to coordinate their extra limb!","message4":"'s extra limb disappears!","minTurns":4,"motion":1,"name":"Spontaneous Extra Limb","note":"<State Animation: 192>\n<Category: Disease>\n<Category: Mutant>\n<Custom Confirm Effect>\nif (action.isAttack()) {\n  if (Math.random() < 0.4) {\n    // 40% chance for extra attack\n    var extraDamage = Math.floor(value * 0.5);\n    BattleManager._logWindow.push('addText', this.name() + ' attacks with their extra limb for ' + extraDamage + ' damage!');\n    value += extraDamage;\n  } else if (Math.random() < 0.3) {\n    // 30% chance to fumble\n    value *= 0.5;\n    BattleManager._logWindow.push('addText', this.name() + ' fumbles with their extra limb!');\n  }\n}\nreturn value;\n</Custom Confirm Effect>","overlay":0,"priority":70,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":1.3},{"code":21,"dataId":6,"value":0.7}]},
{"id":153,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1631,"maxTurns":9,"message1":" is infected with beneficial parasites!","message2":" has beneficial parasites!","message3":" is being enhanced by parasites!","message4":" is free of parasites!","minTurns":5,"motion":1,"name":"Beneficial Parasites","note":"<State Animation: 193>\n<Category: Disease>\n<Category: Mutant>\n<Custom Regenerate Effect>\nvar damage = Math.floor(this.mhp * 0.04);\nthis.gainHp(-damage);\nBattleManager._logWindow.push('addText', this.name() + '\\'s parasites consume ' + damage + ' HP but enhance performance!');\n</Custom Regenerate Effect>","overlay":0,"priority":65,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":1.2},{"code":21,"dataId":6,"value":1.2},{"code":22,"dataId":7,"value":-0.04}]},
{"id":154,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1632,"maxTurns":7,"message1":"'s skin begins to glow!","message2":" has glowing skin!","message3":" is illuminating the area!","message4":"'s skin stops glowing!","minTurns":4,"motion":1,"name":"Glowing Skin","note":"<State Animation: 194>\n<Category: Disease>\n<Category: Mutant>\n<Custom Turn Start Effect>\nif (Math.random() < 0.2) {\n  // 20% chance to find an item\n  BattleManager._logWindow.push('addText', this.name() + '\\'s glow reveals hidden treasures!');\n}\n</Custom Turn Start Effect>\n<Custom Select Effect>\n// Enemies are more likely to target this character\nif (this.isActor() && Math.random() < 0.3) {\n  BattleManager._logWindow.push('addText', this.name() + '\\'s glow attracts enemy attention!');\n}\n</Custom Select Effect>","overlay":3,"priority":60,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":11,"dataId":5,"value":0.6}]},
{"id":155,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1633,"maxTurns":6,"message1":" develops Bottle Cap Fever!","message2":" has Bottle Cap Fever!","message3":" is obsessed with collecting bottle caps!","message4":" is no longer obsessed with bottle caps!","minTurns":3,"motion":1,"name":"Bottle Cap Fever","note":"<State Animation: 195>\n<Category: Disease>\n<Category: Economic>\n<Custom Action Start Effect>\nif (Math.random() < 0.4 && action.isAttack()) {\n  // 40% chance to steal instead of attack\n  var gold = 10 + Math.floor(Math.random() * 50);\n  $gameParty.gainGold(gold);\n  BattleManager._logWindow.push('addText', this.name() + ' steals ' + gold + ' bottle caps instead of attacking!');\n  return false; // Cancel the attack\n}\n</Custom Action Start Effect>","overlay":0,"priority":55,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":7,"value":1.3}]},
{"id":156,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1634,"maxTurns":5,"message1":" develops Barter Addiction!","message2":" has Barter Addiction!","message3":" keeps trying to trade with enemies!","message4":" is no longer addicted to bartering!","minTurns":3,"motion":1,"name":"Barter Addiction","note":"<State Animation: 196>\n<Category: Disease>\n<Category: Economic>\n<Custom Action Start Effect>\nif (Math.random() < 0.3 && action.isAttack()) {\n  // 30% chance to attempt bartering\n  var targets = this.opponentsUnit().aliveMembers();\n  if (targets.length > 0) {\n    var target = targets[Math.floor(Math.random() * targets.length)];\n    if (Math.random() < 0.5) {\n      // 50% chance for successful trade\n      var gold = 20 + Math.floor(Math.random() * 30);\n      $gameParty.gainGold(gold);\n      BattleManager._logWindow.push('addText', this.name() + ' successfully barters with ' + target.name() + ' for ' + gold + ' gold!');\n    } else {\n      // 50% chance for failed trade\n      BattleManager._logWindow.push('addText', this.name() + ' fails to barter with ' + target.name() + '!');\n    }\n  }\n  return false; // Cancel the attack\n}\n</Custom Action Start Effect>","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":157,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1635,"maxTurns":8,"message1":" starts hoarding resources!","message2":" has Resource Hoarding!","message3":" is carrying too many items!","message4":" stops hoarding resources!","minTurns":4,"motion":1,"name":"Resource Hoarding","note":"<State Animation: 197>\n<Category: Disease>\n<Category: Economic>\n<Custom Turn End Effect>\nif (Math.random() < 0.2) {\n  // 20% chance to find an item\n  BattleManager._logWindow.push('addText', this.name() + ' finds a useful item in their hoard!');\n}\n</Custom Turn End Effect>","overlay":0,"priority":55,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":3,"value":0.8},{"code":21,"dataId":6,"value":0.8}]},
{"id":158,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1636,"maxTurns":3,"message1":" gets the hiccups!","message2":" has hiccups!","message3":" is hiccupping uncontrollably!","message4":"'s hiccups finally stop!","minTurns":2,"motion":1,"name":"Chronic Hiccups","note":"<State Animation: 208>\n<Category: MinorAilment>\n<Custom Action Start Effect>\nif (Math.random() < 0.2) {\n  // 20% chance to interrupt action\n  BattleManager._logWindow.push('addText', this.name() + ' *hic* can\\'t speak properly!');\n  return false; // Cancel the action\n}\n</Custom Action Start Effect>\n<Ridicule Trigger: 'hiccups'>","overlay":0,"priority":40,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":159,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1637,"maxTurns":4,"message1":" starts sneezing!","message2":" has allergies!","message3":" keeps sneezing!","message4":"'s allergies clear up!","minTurns":2,"motion":1,"name":"Seasonal Allergies","note":"<State Animation: 209>\n<Category: MinorAilment>\n<Custom Turn Start Effect>\nif (Math.random() < 0.3) {\n  // 30% chance to sneeze\n  BattleManager._logWindow.push('addText', this.name() + ' has a sneezing fit! ACHOO!');\n}\n</Custom Turn Start Effect>\n<Ridicule Trigger: 'allergies'>","overlay":0,"priority":40,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":22,"dataId":0,"value":-0.05}]},
{"id":160,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1638,"maxTurns":4,"message1":"'s hair is sticking up everywhere!","message2":" has terrible bedhead!","message3":"'s hair refuses to be tamed!","message4":" finally fixes their hair!","minTurns":3,"motion":1,"name":"Bedhead","note":"<State Animation: 210>\n<Category: MinorAilment>\n<Ridicule Trigger: 'hair'>","overlay":0,"priority":30,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":161,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1639,"maxTurns":3,"message1":"'s breath suddenly smells terrible!","message2":" has bad breath!","message3":"'s breath could knock out a skunk!","message4":"'s breath returns to normal!","minTurns":2,"motion":1,"name":"Bad Breath","note":"<State Animation: 211>\n<Category: MinorAilment>\n<Ridicule Trigger: 'breath'>","overlay":0,"priority":35,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":162,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1640,"maxTurns":4,"message1":" starts sweating profusely!","message2":" is sweating buckets!","message3":" is drenched in sweat!","message4":" stops sweating excessively!","minTurns":2,"motion":1,"name":"Excessive Sweating","note":"<State Animation: 212>\n<Category: MinorAilment>\n<Ridicule Trigger: 'sweat'>","overlay":0,"priority":35,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":163,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1641,"maxTurns":5,"message1":" develops athlete's foot!","message2":" has athlete's foot!","message3":" can't stop scratching their feet!","message4":"'s athlete's foot clears up!","minTurns":3,"motion":1,"name":"Athlete's Foot","note":"<State Animation: 213>\n<Category: MinorAilment>\n<Custom Turn Start Effect>\nif (Math.random() < 0.3) {\n  // 30% chance to scratch\n  BattleManager._logWindow.push('addText', this.name() + ' stops to scratch their foot!');\n}\n</Custom Turn Start Effect>\n<Ridicule Trigger: 'foot'>","overlay":0,"priority":35,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":6,"value":0.95}]},
{"id":164,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1642,"maxTurns":4,"message1":" starts coughing!","message2":" has a persistent cough!","message3":" keeps coughing!","message4":"'s cough finally subsides!","minTurns":2,"motion":1,"name":"Persistent Cough","note":"<State Animation: 214>\n<Category: MinorAilment>\n<Custom Action Start Effect>\nif (Math.random() < 0.2) {\n  // 20% chance to cough during action\n  BattleManager._logWindow.push('addText', this.name() + ' has a coughing fit!');\n}\n</Custom Action Start Effect>\n<Ridicule Trigger: 'cough'>","overlay":0,"priority":40,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":165,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1643,"maxTurns":3,"message1":"'s eye starts twitching!","message2":" has an eye twitch!","message3":"'s eye won't stop twitching!","message4":"'s eye twitch stops!","minTurns":2,"motion":1,"name":"Eye Twitch","note":"<State Animation: 215>\n<Category: MinorAilment>\n<Ridicule Trigger: 'twitch'>","overlay":0,"priority":30,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":166,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1644,"maxTurns":4,"message1":"'s nose starts running!","message2":" has a runny nose!","message3":" keeps sniffling!","message4":"'s nose stops running!","minTurns":2,"motion":1,"name":"Runny Nose","note":"<State Animation: 216>\n<Category: MinorAilment>\n<Custom Turn Start Effect>\nif (Math.random() < 0.4) {\n  // 40% chance to sniffle\n  BattleManager._logWindow.push('addText', this.name() + ' sniffles loudly!');\n}\n</Custom Turn Start Effect>\n<Ridicule Trigger: 'nose'>","overlay":0,"priority":35,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":167,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1645,"maxTurns":5,"message1":" breaks out in acne!","message2":" has an acne breakout!","message3":"'s face is covered in pimples!","message4":"'s acne clears up!","minTurns":3,"motion":1,"name":"Acne Breakout","note":"<State Animation: 217>\n<Category: MinorAilment>\n<Ridicule Trigger: 'acne'>","overlay":0,"priority":30,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":168,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1646,"maxTurns":4,"message1":" loses their voice!","message2":" has laryngitis!","message3":" can barely speak above a whisper!","message4":"'s voice returns to normal!","minTurns":2,"motion":1,"name":"Laryngitis","note":"<State Animation: 218>\n<Category: MinorAilment>\n<Custom Action Start Effect>\nif (this._actions[0].isSkill() && Math.random() < 0.2) {\n  // 20% chance to fail verbal skills\n  BattleManager._logWindow.push('addText', this.name() + ' can\\'t speak loud enough to cast the spell!');\n  return false; // Cancel the action\n}\n</Custom Action Start Effect>\n<Ridicule Trigger: 'voice'>","overlay":0,"priority":40,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":169,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1647,"maxTurns":8,"message1":" develops Generalized Anxiety!","message2":" has Generalized Anxiety!","message3":" is constantly worried about everything!","message4":"'s anxiety subsides!","minTurns":4,"motion":1,"name":"Generalized Anxiety","note":"<State Animation: 241>\n<Category: MentalIllness>\n<Custom Action Start Effect>\nif (Math.random() < 0.25) {\n  // 25% chance to freeze\n  BattleManager._logWindow.push('addText', this.name() + ' freezes with anxiety!');\n  return false; // Cancel the action\n}\n</Custom Action Start Effect>","overlay":0,"priority":70,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":3,"value":1.15},{"code":21,"dataId":5,"value":1.15}]},
{"id":170,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1648,"maxTurns":7,"message1":" develops Social Anxiety!","message2":" has Social Anxiety!","message3":" is uncomfortable in social situations!","message4":"'s social anxiety fades!","minTurns":4,"motion":1,"name":"Social Anxiety","note":"<State Animation: 242>\n<Category: MentalIllness>\n<Custom Turn Start Effect>\nvar allies = $gameParty.aliveMembers().length;\nif (allies <= 1) {\n  // Alone - gain bonuses\n  this.addBuff(2, 2); // ATK\n  this.addBuff(3, 2); // DEF\n  this.addBuff(4, 2); // MAT\n  this.addBuff(5, 2); // MDF\n  this.addBuff(6, 2); // AGI\n  this.addBuff(7, 2); // LUK\n  BattleManager._logWindow.push('addText', this.name() + ' feels comfortable being alone!');\n} else {\n  // In a crowd - get penalties\n  this.addDebuff(2, 2); // ATK\n  this.addDebuff(3, 2); // DEF\n  this.addDebuff(4, 2); // MAT\n  this.addDebuff(5, 2); // MDF\n  this.addDebuff(6, 2); // AGI\n  this.addDebuff(7, 2); // LUK\n  BattleManager._logWindow.push('addText', this.name() + ' feels anxious in a crowd!');\n}\n</Custom Turn Start Effect>","overlay":0,"priority":65,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":171,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1649,"maxTurns":6,"message1":" develops Panic Disorder!","message2":" has Panic Disorder!","message3":" is prone to panic attacks!","message4":"'s panic disorder subsides!","minTurns":3,"motion":1,"name":"Panic Disorder","note":"<State Animation: 243>\n<Category: MentalIllness>\n<Custom Turn Start Effect>\nif (Math.random() < 0.3) {\n  // 30% chance for panic attack\n  this.addBuff(6, 3); // +50% AGI\n  this.addDebuff(0, 3); // -50% HIT\n  BattleManager._logWindow.push('addText', this.name() + ' has a panic attack!');\n}\n</Custom Turn Start Effect>","overlay":0,"priority":75,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":172,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1650,"maxTurns":10,"message1":" develops Bipolar Disorder!","message2":" has Bipolar Disorder!","message3":" is experiencing mood cycles!","message4":"'s bipolar disorder stabilizes!","minTurns":5,"motion":1,"name":"Bipolar Disorder","note":"<State Animation: 244>\n<Category: MentalIllness>\n<Custom Turn Start Effect>\nvar phase = Math.floor(this._stateTurns[this._stateIndexes.indexOf(136)] / 2) % 2;\nif (phase === 0) {\n  // Manic phase\n  this.addBuff(2, 2); // ATK\n  this.addBuff(4, 2); // MAT\n  this.addBuff(6, 2); // AGI\n  this.addDebuff(3, 3); // DEF\n  this.addDebuff(5, 3); // MDF\n  BattleManager._logWindow.push('addText', this.name() + ' enters a manic phase!');\n} else {\n  // Depressive phase\n  this.addDebuff(2, 2); // ATK\n  this.addDebuff(4, 2); // MAT\n  this.addDebuff(6, 2); // AGI\n  this.addBuff(3, 1); // DEF\n  this.addBuff(5, 1); // MDF\n  BattleManager._logWindow.push('addText', this.name() + ' enters a depressive phase!');\n}\n</Custom Turn Start Effect>","overlay":0,"priority":70,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":173,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1651,"maxTurns":9,"message1":" develops Clinical Depression!","message2":" has Clinical Depression!","message3":" is experiencing persistent low mood!","message4":"'s depression lifts!","minTurns":5,"motion":1,"name":"Clinical Depression","note":"<State Animation: 245>\n<Category: MentalIllness>\n<Custom Action Start Effect>\nif (Math.random() < 0.2) {\n  // 20% chance to skip turn\n  BattleManager._logWindow.push('addText', this.name() + ' lacks motivation to act...');\n  return false; // Cancel the action\n}\n</Custom Action Start Effect>","overlay":0,"priority":65,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":0.7},{"code":21,"dataId":6,"value":0.7},{"code":14,"dataId":4,"value":0}]},
{"id":174,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1652,"maxTurns":8,"message1":" develops Seasonal Affective Disorder!","message2":" has Seasonal Affective Disorder!","message3":"'s mood depends on lighting conditions!","message4":"'s seasonal affective disorder improves!","minTurns":4,"motion":1,"name":"Seasonal Affective","note":"<State Animation: 246>\n<Category: MentalIllness>\n<Custom Turn Start Effect>\nvar isDark = $gameMap.isDark && $gameMap.isDark() || $gameSystem.isNightTime && $gameSystem.isNightTime();\nif (isDark) {\n  // In darkness - debuffs\n  this.addDebuff(2, 2); // ATK\n  this.addDebuff(4, 2); // MAT\n  this.addDebuff(6, 2); // AGI\n  BattleManager._logWindow.push('addText', this.name() + ' feels worse in the darkness!');\n} else {\n  // In light - buffs\n  this.addBuff(2, 1); // ATK\n  this.addBuff(4, 1); // MAT\n  this.addBuff(6, 1); // AGI\n  BattleManager._logWindow.push('addText', this.name() + ' feels better in the light!');\n}\n</Custom Turn Start Effect>","overlay":0,"priority":60,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":175,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1653,"maxTurns":7,"message1":" develops Schizophrenia!","message2":" has Schizophrenia!","message3":" is experiencing hallucinations!","message4":"'s schizophrenia subsides!","minTurns":4,"motion":1,"name":"Schizophrenia","note":"<State Animation: 247>\n<Category: MentalIllness>\n<Custom Turn Start Effect>\nif (Math.random() < 0.4) {\n  // 40% chance for hallucination\n  if (Math.random() < 0.5) {\n    // 50% chance for helpful hallucination\n    BattleManager._logWindow.push('addText', this.name() + ' notices something others don\\'t!');\n    // Reveal enemy weakness or hidden item\n    if (Math.random() < 0.5) {\n      this.addBuff(2, 2); // ATK\n      BattleManager._logWindow.push('addText', this.name() + ' spots an enemy weakness!');\n    } else {\n      this.addBuff(7, 2); // LUK\n      BattleManager._logWindow.push('addText', this.name() + ' finds a hidden item!');\n    }\n  } else {\n    // 50% chance for harmful hallucination\n    BattleManager._logWindow.push('addText', this.name() + ' is distracted by hallucinations!');\n    this.addDebuff(0, 2); // HIT\n  }\n}\n</Custom Turn Start Effect>","overlay":0,"priority":75,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":176,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1654,"maxTurns":6,"message1":" becomes Paranoid!","message2":" is Paranoid!","message3":" trusts no one!","message4":"'s paranoia subsides!","minTurns":3,"motion":1,"name":"Paranoia","note":"<State Animation: 248>\n<Category: MentalIllness>\n<Custom Action Start Effect>\nif (this._actions[0].isForFriend() && Math.random() < 0.3) {\n  // 30% chance to attack ally instead of helping\n  BattleManager._logWindow.push('addText', this.name() + ' suspects an ally is an enemy in disguise!');\n  this._actions[0].setAttack();\n  var allies = this.friendsUnit().aliveMembers();\n  if (allies.length > 1) {\n    var target = allies[Math.floor(Math.random() * allies.length)];\n    if (target !== this) {\n      this._actions[0].setTarget(target.index());\n    }\n  }\n}\n</Custom Action Start Effect>","overlay":0,"priority":70,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":7,"value":1.5}]},
{"id":177,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1655,"maxTurns":8,"message1":" develops Dissociative Identity Disorder!","message2":" has Dissociative Identity Disorder!","message3":" has multiple personalities!","message4":"'s identity stabilizes!","minTurns":4,"motion":1,"name":"Dissociative Identity","note":"<State Animation: 249>\n<Category: MentalIllness>\n<Custom Turn Start Effect>\nif (Math.random() < 0.3) {\n  // 30% chance to switch personality\n  var personalities = ['Warrior', 'Mage', 'Rogue', 'Healer'];\n  var personality = personalities[Math.floor(Math.random() * personalities.length)];\n  \n  // Clear all buffs/debuffs\n  for (var i = 0; i < 8; i++) {\n    this.removeBuff(i);\n  }\n  \n  // Apply new personality stats\n  switch (personality) {\n    case 'Warrior':\n      this.addBuff(2, 3); // ATK\n      this.addBuff(3, 3); // DEF\n      this.addDebuff(4, 2); // MAT\n      this.addDebuff(5, 1); // MDF\n      break;\n    case 'Mage':\n      this.addDebuff(2, 2); // ATK\n      this.addDebuff(3, 1); // DEF\n      this.addBuff(4, 3); // MAT\n      this.addBuff(5, 3); // MDF\n      break;\n    case 'Rogue':\n      this.addBuff(2, 2); // ATK\n      this.addDebuff(3, 2); // DEF\n      this.addDebuff(4, 1); // MAT\n      this.addBuff(6, 3); // AGI\n      this.addBuff(7, 3); // LUK\n      break;\n    case 'Healer':\n      this.addDebuff(2, 1); // ATK\n      this.addBuff(3, 1); // DEF\n      this.addBuff(4, 2); // MAT\n      this.addBuff(5, 2); // MDF\n      break;\n  }\n  \n  BattleManager._logWindow.push('addText', this.name() + ' switches to ' + personality + ' personality!');\n}\n</Custom Turn Start Effect>","overlay":0,"priority":80,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":178,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1656,"maxTurns":7,"message1":" develops ADHD!","message2":" has ADHD!","message3":" has difficulty maintaining focus!","message4":"'s ADHD symptoms improve!","minTurns":4,"motion":1,"name":"ADHD","note":"<State Animation: 250>\n<Category: MentalIllness>\n<Custom Turn End Effect>\n// Reduce buff/debuff duration\nfor (var i = 0; i < 8; i++) {\n  if (this._buffTurns[i] > 0) this._buffTurns[i]--;\n}\n</Custom Turn End Effect>\n<Custom Confirm Effect>\nif (action.isAttack()) {\n  // Check if attacking same target as last turn\n  if (this._lastTarget === action._targetIndex) {\n    // Hyperfocus bonus\n    value *= 1.25;\n    BattleManager._logWindow.push('addText', this.name() + ' hyperfocuses for extra damage!');\n    this._focusTurns = (this._focusTurns || 0) + 1;\n    if (this._focusTurns > 1) {\n      value *= (1 + (this._focusTurns * 0.1)); // Additional 10% per turn of focus\n    }\n  } else {\n    this._focusTurns = 0;\n  }\n  this._lastTarget = action._targetIndex;\n}\nreturn value;\n</Custom Confirm Effect>","overlay":0,"priority":60,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":179,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1657,"maxTurns":0,"message1":" is diagnosed with Autism Spectrum Disorder!","message2":" has Autism Spectrum Disorder!","message3":" processes information differently!","message4":"","minTurns":0,"motion":1,"name":"Autism Spectrum","note":"<State Animation: 251>\n<Category: MentalIllness>\n<Custom Turn Start Effect>\n// Increased pattern recognition in battle\nif (this._turnCount && this._turnCount % 3 === 0) {\n  // Every 3 turns, recognize enemy patterns\n  this.addBuff(0, 2); // HIT\n  this.addBuff(7, 2); // LUK\n  BattleManager._logWindow.push('addText', this.name() + ' recognizes enemy attack patterns!');\n}\n</Custom Turn Start Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":180,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1658,"maxTurns":8,"message1":" develops OCD!","message2":" has OCD!","message3":" needs to perform rituals before acting!","message4":"'s OCD symptoms subside!","minTurns":4,"motion":1,"name":"OCD","note":"<State Animation: 252>\n<Category: MentalIllness>\n<Custom Action Start Effect>\nif (!this._ritualComplete) {\n  // First turn - perform ritual\n  BattleManager._logWindow.push('addText', this.name() + ' performs a ritual...');\n  this._ritualComplete = true;\n  return false; // Skip turn for ritual\n} else {\n  // Second turn - perfect accuracy\n  this._actions[0]._hitType = Game_Action.HITTYPE_CERTAIN;\n  BattleManager._logWindow.push('addText', this.name() + ' acts with perfect precision!');\n  this._ritualComplete = false; // Reset for next time\n}\n</Custom Action Start Effect>","overlay":0,"priority":65,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":181,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1659,"maxTurns":7,"message1":" develops Narcissistic Personality Disorder!","message2":" has Narcissistic Personality Disorder!","message3":" has an inflated sense of self-importance!","message4":"'s narcissism subsides!","minTurns":4,"motion":1,"name":"Narcissistic Personality","note":"<State Animation: 253>\n<Category: MentalIllness>\n<Custom Turn Start Effect>\n// Simulate praise or criticism randomly\nif (Math.random() < 0.5) {\n  // Praise\n  for (var i = 0; i < 8; i++) {\n    this.addBuff(i, 3);\n  }\n  BattleManager._logWindow.push('addText', this.name() + ' feels praised and performs better!');\n} else {\n  // Criticism\n  for (var i = 0; i < 8; i++) {\n    this.addDebuff(i, 3);\n  }\n  BattleManager._logWindow.push('addText', this.name() + ' feels criticized and performs worse!');\n}\n</Custom Turn Start Effect>","overlay":0,"priority":60,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":182,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1660,"maxTurns":8,"message1":" develops Borderline Personality Disorder!","message2":" has Borderline Personality Disorder!","message3":" experiences emotional instability!","message4":"'s borderline symptoms stabilize!","minTurns":4,"motion":1,"name":"Borderline Personality","note":"<State Animation: 254>\n<Category: MentalIllness>\n<Custom Turn Start Effect>\n// Emotional state depends on allies\nvar allies = $gameParty.aliveMembers().length;\nvar emotionalState = Math.random();\n\n// Clear previous buffs/debuffs\nfor (var i = 0; i < 8; i++) {\n  this.removeBuff(i);\n}\n\nif (emotionalState < 0.3) {\n  // Abandonment fear\n  for (var i = 0; i < 8; i++) {\n    this.addDebuff(i, 3);\n  }\n  BattleManager._logWindow.push('addText', this.name() + ' fears abandonment and performs worse!');\n} else if (emotionalState < 0.6) {\n  // Idealization\n  for (var i = 0; i < 8; i++) {\n    this.addBuff(i, 3);\n  }\n  BattleManager._logWindow.push('addText', this.name() + ' idealizes allies and performs better!');\n} else {\n  // Emotional numbness\n  this.addBuff(3, 2); // DEF\n  this.addBuff(5, 2); // MDF\n  this.addDebuff(2, 2); // ATK\n  this.addDebuff(4, 2); // MAT\n  BattleManager._logWindow.push('addText', this.name() + ' feels emotionally numb!');\n}\n</Custom Turn Start Effect>","overlay":0,"priority":70,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":183,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":1661,"maxTurns":6,"message1":" develops Agoraphobia!","message2":" has Agoraphobia!","message3":" fears open spaces!","message4":"'s agoraphobia subsides!","minTurns":3,"motion":1,"name":"Agoraphobia","note":"<State Animation: 255>\n<Category: MentalIllness>\n<Custom Turn Start Effect>\nvar isOutdoors = $gameMap.isOutdoors && $gameMap.isOutdoors() || $dataMap.meta.Outdoors;\nif (isOutdoors) {\n  // Outdoors - debuffs\n  this.addDebuff(2, 2); // ATK\n  this.addDebuff(3, 2); // DEF\n  this.addDebuff(4, 2); // MAT\n  this.addDebuff(5, 2); // MDF\n  this.addDebuff(6, 2); // AGI\n  BattleManager._logWindow.push('addText', this.name() + ' is terrified in open spaces!');\n} else {\n  // Indoors - buffs\n  this.addBuff(2, 1); // ATK\n  this.addBuff(3, 1); // DEF\n  this.addBuff(4, 1); // MAT\n  this.addBuff(5, 1); // MDF\n  this.addBuff(6, 1); // AGI\n  BattleManager._logWindow.push('addText', this.name() + ' feels safer indoors!');\n}\n</Custom Turn Start Effect>","overlay":0,"priority":65,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]}
]