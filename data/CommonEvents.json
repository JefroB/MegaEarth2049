[
    null,
    {"id":1,"list":[{"code":108,"indent":0,"parameters":["Comment: This event seems incomplete or like a test."]},{"code":108,"indent":0,"parameters":["It changes variables related to item 25, but has no trigger."]},{"code":315,"indent":0,"parameters":[0,0,0,0,25,false]},{"code":0,"indent":0,"parameters":[]}],"name":"Exploration Exp","switchId":1,"trigger":0},
    {"id":2,"list":[{"code":108,"indent":0,"parameters":["Comment: Standard mining interaction event."]},{"code":122,"indent":0,"parameters":[10,10,0,2,0,49]},{"code":102,"indent":0,"parameters":[["Yes","No"],1,0,2,0]},{"code":402,"indent":0,"parameters":[0,"Yes"]},{"code":111,"indent":1,"parameters":[1,10,0,47,3]},{"code":101,"indent":2,"parameters":["",0,0,0]},{"code":401,"indent":2,"parameters":["You found really rare thing."]},{"code":0,"indent":2,"parameters":[]},{"code":411,"indent":1,"parameters":[]},{"code":111,"indent":2,"parameters":[1,10,0,35,4]},{"code":101,"indent":3,"parameters":["",0,0,0]},{"code":401,"indent":3,"parameters":["You found a common thing."]},{"code":0,"indent":3,"parameters":[]},{"code":411,"indent":2,"parameters":[]},{"code":101,"indent":3,"parameters":["",0,0,0]},{"code":401,"indent":3,"parameters":["You found a somewhat rare thing."]},{"code":0,"indent":3,"parameters":[]},{"code":412,"indent":2,"parameters":[]},{"code":0,"indent":2,"parameters":[]},{"code":412,"indent":1,"parameters":[]},{"code":0,"indent":1,"parameters":[]},{"code":402,"indent":0,"parameters":[1,"No"]},{"code":0,"indent":1,"parameters":[]},{"code":404,"indent":0,"parameters":[]},{"code":0,"indent":0,"parameters":[]}],"name":"Mining Event","switchId":1,"trigger":0},
    {"id":3,"list":[{"code":0,"indent":0,"parameters":[]}],"name":"(Empty Slot)","switchId":1,"trigger":0},
    {"id":4,"list":[{"code":108,"indent":0,"parameters":["Comment: This is likely called via Troop Event page after defeating Pink Ninja."]},{"code":108,"indent":0,"parameters":["Checks Self Switches A and B to prevent repeated rewards."]},{"code":111,"indent":0,"parameters":[2,"A",0]},{"code":111,"indent":1,"parameters":[2,"B",0]},{"code":101,"indent":2,"parameters":["ninja2",0,0,1]},{"code":401,"indent":2,"parameters":["The Pink Ninja seems weakened after defeat..."]},{"code":101,"indent":2,"parameters":["",0,0,2]},{"code":401,"indent":2,"parameters":["You obtained a Pink Bandana!"]},{"code":311,"indent":2,"parameters":[1,13,0,1,0]},{"code":123,"indent":2,"parameters":["A",true]},{"code":0,"indent":2,"parameters":[]},{"code":412,"indent":1,"parameters":[]},{"code":411,"indent":0,"parameters":[]},{"code":111,"indent":1,"parameters":[2,"A",1]},{"code":111,"indent":2,"parameters":[2,"B",0]},{"code":101,"indent":3,"parameters":["ninja2",0,0,1]},{"code":401,"indent":3,"parameters":["The Pink Ninja looks completely defeated now."]},{"code":101,"indent":3,"parameters":["",0,0,2]},{"code":401,"indent":3,"parameters":["The Pink Bandana crumbles to dust..."]},{"code":311,"indent":3,"parameters":[1,13,0,-1,0]},{"code":123,"indent":3,"parameters":["B",true]},{"code":0,"indent":3,"parameters":[]},{"code":412,"indent":2,"parameters":[]},{"code":411,"indent":1,"parameters":[]},{"code":412,"indent":0,"parameters":[]},{"code":0,"indent":0,"parameters":[]}],"name":"Pink Ninja Defeated Reward","switchId":1,"trigger":0},
    {"id":5,"list":[{"code":108,"indent":0,"parameters":["Comment: Called by skills via <finish action> common event: 5 </finish action>"]},{"code":108,"indent":0,"parameters":["Requires the ITEM's <Setup Action> to set Variable 1 to its item ID."]},{"code":108,"indent":0,"parameters":["Script: $gameVariables.setValue(1, item.id)"]},{"code":122,"indent":0,"parameters":[1,1,0,3,1,0]},{"code":111,"indent":0,"parameters":[1,1,1,0,0]},{"code":108,"indent":1,"parameters":["Comment: Check if Variable 1 contains a valid Item ID (>0)"]},{"code":311,"indent":1,"parameters":[1,1,0,-1,0]},{"code":108,"indent":1,"parameters":["Comment: Remove 1 of the item stored in Variable 1"]},{"code":122,"indent":1,"parameters":[1,1,1,0,0,0]},{"code":108,"indent":1,"parameters":["Comment: Clear Variable 1 after use."]},{"code":0,"indent":1,"parameters":[]},{"code":412,"indent":0,"parameters":[]},{"code":0,"indent":0,"parameters":[]}],"name":"Consume Used Item","switchId":1,"trigger":0},
    {"id":6,"list":[{"code":108,"indent":0,"parameters":["Comment: Called by Steal skill on success, e.g., <After Eval> Common Event: 6 </After Eval>"]},{"code":108,"indent":0,"parameters":["Requires target information. Assumes Variable 2 holds the target index."]},{"code":108,"indent":0,"parameters":["or target._enemyId if called via script/plugin with target context."]},{"code":355,"indent":0,"parameters":["var target = BattleManager._targets[0]; // Gets the first target of the skill"]},{"code":355,"indent":0,"parameters":["var enemyId = target.enemyId();"]},{"code":355,"indent":0,"parameters":["var enemy = $dataEnemies[enemyId];"]},{"code":355,"indent":0,"parameters":["var item = null; var itemType = 0; var rate = 0; var msg = 'Steal failed!';"]},{"code":355,"indent":0,"parameters":["// --- Check Notetags (Example using simple tags) ---"]},{"code":355,"indent":0,"parameters":["if (enemy.note.match(/<steal item: (\\d+)>i)) { item = $dataItems[parseInt(RegExp.$1)]; itemType = 1; rate = 0.5; // Example rate }"]},{"code":355,"indent":0,"parameters":["else if (enemy.note.match(/<steal weapon: (\\d+)>i)) { item = $dataWeapons[parseInt(RegExp.$1)]; itemType = 2; rate = 0.3; }"]},{"code":355,"indent":0,"parameters":["else if (enemy.note.match(/<steal armor: (\\d+)>i)) { item = $dataArmors[parseInt(RegExp.$1)]; itemType = 3; rate = 0.3; }"]},{"code":355,"indent":0,"parameters":["// --- Add complex rate calculation here if needed ---"]},{"code":355,"indent":0,"parameters":["// --- Roll for success (can be done here or assumed done by skill) ---"]},{"code":355,"indent":0,"parameters":["// if (Math.random() < rate) { // Uncomment if check is done here"]},{"code":355,"indent":0,"parameters":["if (item) {"]},{"code":355,"indent":0,"parameters":["  $gameParty.gainItem(item, 1);"]},{"code":355,"indent":0,"parameters":["  msg = 'Stole ' + item.name + '!';"]},{"code":355,"indent":0,"parameters":["  // Optional: Add script/plugin call to mark item as stolen from this enemy"]},{"code":355,"indent":0,"parameters":["} else { msg = 'Nothing to steal!'; }"]},{"code":355,"indent":0,"parameters":["// } // Uncomment if check is done here"]},{"code":355,"indent":0,"parameters":["// --- Display Message ---"]},{"code":355,"indent":0,"parameters":["$gameMessage.add(msg);"]},{"code":0,"indent":0,"parameters":[]}],"name":"Steal Logic","switchId":1,"trigger":0},
    {"id":7,"list":[{"code":108,"indent":0,"parameters":["Comment: Called by Diagnosis skill, e.g., <After Eval> Common Event: 7 </After Eval>"]},{"code":108,"indent":0,"parameters":["Requires target info. Assumes Var 2 holds target index or use script."]},{"code":355,"indent":0,"parameters":["var target = BattleManager._targets[0]; // Gets the first target"]},{"code":355,"indent":0,"parameters":["if (target) {"]},{"code":355,"indent":0,"parameters":["  var name = target.name();"]},{"code":355,"indent":0,"parameters":["  var hp = target.hp;"]},{"code":355,"indent":0,"parameters":["  var mhp = target.mhp;"]},{"code":355,"indent":0,"parameters":["  var mp = target.mp;"]},{"code":355,"indent":0,"parameters":["  var mmp = target.mmp;"]},{"code":355,"indent":0,"parameters":["  var atk = target.atk;"]},{"code":355,"indent":0,"parameters":["  var def = target.def;"]},{"code":355,"indent":0,"parameters":["  var mat = target.mat;"]},{"code":355,"indent":0,"parameters":["  var mdf = target.mdf;"]},{"code":355,"indent":0,"parameters":["  var agi = target.agi;"]},{"code":355,"indent":0,"parameters":["  var luk = target.luk;"]},{"code":355,"indent":0,"parameters":["  var msg = name + '\\n';"]},{"code":355,"indent":0,"parameters":["  msg += 'HP: ' + hp + '/' + mhp + '   MP: ' + mp + '/' + mmp + '\\n';"]},{"code":355,"indent":0,"parameters":["  msg += 'ATK: ' + atk + '  DEF: ' + def + '  MAT: ' + mat + '\\n';"]},{"code":355,"indent":0,"parameters":["  msg += 'MDF: ' + mdf + '  AGI: ' + agi + '  LUK: ' + luk;"]},{"code":355,"indent":0,"parameters":["// Add checks for elemental rates/states if needed using target.elementRate(id) / target.isStateAffected(id)"]},{"code":355,"indent":0,"parameters":["  $gameMessage.add(msg);"]},{"code":355,"indent":0,"parameters":["} else { $gameMessage.add('Analysis failed.'); }"]},{"code":0,"indent":0,"parameters":[]}],"name":"Diagnosis Logic","switchId":1,"trigger":0},
    {"id":8,"list":[{"code":111,"indent":0,"parameters":[4,27,0]},{"code":101,"indent":1,"parameters":["",0,0,2]},{"code":401,"indent":1,"parameters":["You use the engine..."]},{"code":311,"indent":1,"parameters":[1,27,1,-1,0]},{"code":123,"indent":1,"parameters":["A",true]},{"code":108,"indent":1,"parameters":["Comment: Add crane repair animations, sound effects, screen flash, etc."]},{"code":201,"indent":1,"parameters":[0,1,17,10,0,0]},{"code":211,"indent":1,"parameters":[1,true]},{"code":0,"indent":1,"parameters":[]},{"code":411,"indent":0,"parameters":[]},{"code":101,"indent":1,"parameters":["",0,0,2]},{"code":401,"indent":1,"parameters":["You need an engine for this."]},{"code":0,"indent":1,"parameters":[]},{"code":412,"indent":0,"parameters":[]},{"code":0,"indent":0,"parameters":[]}],"name":"Crane Repair Check","switchId":1,"trigger":0},
    {"id":9,"list":[{"code":108,"indent":0,"parameters":["Expects Variable [11] (KeyCheckID) to be set to the required Item ID."]},{"code":108,"indent":0,"parameters":["Sets Variable [12] (KeyCheckResult) to 1 (Success) or 0 (Failure)."]},{"code":230,"indent":0,"parameters":[1]},{"code":111,"indent":0,"parameters":[10,11,0]},{"code":311,"indent":1,"parameters":[1,11,0,-1,0]},{"code":101,"indent":1,"parameters":["",0,0,2]},{"code":401,"indent":1,"parameters":["Used the key... Unlocked!"]},{"code":212,"indent":1,"parameters":[20]},{"code":122,"indent":1,"parameters":[12,12,0,0,1,0]},{"code":230,"indent":1,"parameters":[1]},{"code":0,"indent":1,"parameters":[]},{"code":411,"indent":0,"parameters":[]},{"code":101,"indent":1,"parameters":["",0,0,2]},{"code":401,"indent":1,"parameters":["It's locked. Requires a specific key."]},{"code":122,"indent":1,"parameters":[12,12,0,0,0,0]},{"code":0,"indent":1,"parameters":[]},{"code":412,"indent":0,"parameters":[]},{"code":0,"indent":0,"parameters":[]}],"name":"Check Specific Key","switchId":1,"trigger":0},
    {"id":10,"list":[{"code":108,"indent":0,"parameters":["Comment: Parallel process for managing state turns/upgrades."]},{"code":108,"indent":0,"parameters":["This often works better using YEP_BuffsStatesCore notetags directly on states."]},{"code":108,"indent":0,"parameters":["Example structure if using Common Event + Script Calls:"]},{"code":355,"indent":0,"parameters":["$gameParty.members().forEach(function(actor) {"]},{"code":355,"indent":0,"parameters":["  // Check for Diarrhea (ID 11)"]},{"code":355,"indent":0,"parameters":["  if (actor.isStateAffected(11)) {"]},{"code":355,"indent":0,"parameters":["    var turns = actor.stateTurns(11);"]},{"code":355,"indent":0,"parameters":["    if (turns >= 10) { // Threshold for Dysentary (adjust as needed)"]},{"code":355,"indent":0,"parameters":["      actor.addState(13); // Add Dysentary"]},{"code":355,"indent":0,"parameters":["      actor.removeState(11); // Remove Diarrhea"]},{"code":355,"indent":0,"parameters":["    }"]},{"code":355,"indent":0,"parameters":["  }"]},{"code":355,"indent":0,"parameters":["  // Check for Hyped (ID 19)"]},{"code":355,"indent":0,"parameters":["  if (actor.isStateAffected(19)) {"]},{"code":355,"indent":0,"parameters":["    var turns = actor.stateTurns(19);"]},{"code":355,"indent":0,"parameters":["    if (turns >= 10) { // Threshold for Stoked (adjust as needed)"]},{"code":355,"indent":0,"parameters":["       actor.addState(20); // Add Stoked"]},{"code":355,"indent":0,"parameters":["       actor.removeState(19); // Remove Hyped"]},{"code":355,"indent":0,"parameters":["    }"]},{"code":355,"indent":0,"parameters":["  }"]},{"code":355,"indent":0,"parameters":["  // Add checks for Stoked -> Bummed if needed"]},{"code":355,"indent":0,"parameters":["});"]},{"code":15,"indent":0,"parameters":[30]},{"code":0,"indent":0,"parameters":[]}],"name":"State Turn Management (Parallel)","switchId":2,"trigger":2},
    {"id":11,"list":[{"code":108,"indent":0,"parameters":["Comment: This common event is now likely obsolete if using YEP_BuffsStatesCore."]},{"code":108,"indent":0,"parameters":["Keeping structure for reference, but state notetags are preferred."]},{"code":108,"indent":0,"parameters":["Assume Var 13 has Actor ID passed from a loop in CE 10"]},{"code":111,"indent":0,"parameters":[6,13,11]},{"code":111,"indent":1,"parameters":[1,13,0,10,2]},{"code":355,"indent":2,"parameters":["// Need script/plugin command to get state turns accurately"]},{"code":108,"indent":2,"parameters":["Placeholder: If turns > 10..."]},{"code":318,"indent":2,"parameters":[1,13,true]},{"code":318,"indent":2,"parameters":[1,11,false]},{"code":0,"indent":2,"parameters":[]},{"code":412,"indent":1,"parameters":[]},{"code":0,"indent":1,"parameters":[]},{"code":411,"indent":0,"parameters":[]},{"code":0,"indent":0,"parameters":[]}],"name":"(Obsolete? CE: Check Dia/Dys)","switchId":1,"trigger":0}
    ]